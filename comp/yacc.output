Terminals which are not used

   ID
   TRUE
   FALSE
   SYMBOL
   expr_1


Grammar

    0 $accept: program $end

    1 program: components

    2 components: components component
    3           | component

    4 component: class_interface
    5          | class_implementation
    6          | protocol

    7 class_interface: class_interface_header class_interface_body

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables AT_END
   15                     | protocol_reference_list interface_declaration_list AT_END
   16                     | instance_variables interface_declaration_list AT_END
   17                     | protocol_reference_list AT_END
   18                     | instance_variables AT_END
   19                     | interface_declaration_list AT_END
   20                     | AT_END

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN

   22 ids_list: IDENTIFIER
   23         | ids_list error IDENTIFIER
   24         | ids_list COMMA IDENTIFIER

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S
   26                   | OPEN_S instance_variable_declarations error
   27                   | OPEN_S instance_variable_declarations

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration
   29                               | instance_variable_declaration
   30                               | variable_declaration_list

   31 instance_variable_declaration: visibility_specification variable_declaration_list

   32 variable_declaration_list: variable_declaration_list variable_declaration
   33                          | variable_declaration

   34 visibility_specification: AT_PRIVATE
   35                         | AT_PROTECTED
   36                         | AT_PUBLIC

   37 variable_declaration: type IDENTIFIER SEMI_COMA
   38                     | type IDENTIFIER error
   39                     | type IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr error
   41                     | CONST type IDENTIFIER SEMI_COMA
   42                     | CONST type IDENTIFIER error
   43                     | CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr error
   45                     | Enum
   46                     | structrule
   47                     | ArrayOne
   48                     | ArrayN

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA
   50     | TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

   53 variable_declarations: type IDENTIFIER SEMI_COMA
   54                      | variable_declarations type IDENTIFIER SEMI_COMA
   55                      | type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   56                      | variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations CONST type IDENTIFIER SEMI_COMA
   58                      | CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   60                      | CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

   65 array_body: array_body COMMA expr
   66           | expr
   67           | array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   68           | OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR
   73      | Multi OPEN_ARR INT_VAL CLOSE_ARR

   74 array_body2: OPEN_S array_body CLOSE_S
   75            | expr
   76            | array_body2 COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA expr

   78 type: simple_type
   79     | complex_type

   80 simple_type: INT
   81            | CHAR
   82            | FLOAT
   83            | NSSTRING
   84            | VOID

   85 complex_type: IDENTIFIER MULTI

   86 interface_declaration_list: interface_declaration_list interface_declaration
   87                           | interface_declaration

   88 interface_declaration: class_method_declaration
   89                      | instance_method_declaration

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA
   91                         | PLUS p_type method_selector error
   92                         | PLUS method_selector SEMI_COMA
   93                         | PLUS method_selector error

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA
   95                            | MINUS method_selector SEMI_COMA
   96                            | MINUS p_type method_selector error
   97                            | MINUS method_selector error

   98 p_type: OPEN_P type CLOSE_P
   99       | error type CLOSE_P
  100       | OPEN_P type error

  101 method_selector: IDENTIFIER SEMI_COLUMN parameter_list
  102                | IDENTIFIER

  103 parameter_list: parameter_list SEMI_COLUMN parameter
  104               | parameter_list IDENTIFIER SEMI_COLUMN parameter
  105               | parameter_list IDENTIFIER error parameter
  106               | parameter_list IDENTIFIER parameter
  107               | parameter

  108 parameter: p_type IDENTIFIER

  109 try_catch: TRY block_body catch_statment

  110 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment
  111               | FINALLY block_body

  112 Exception_type: NUllPointerException
  113               | OUtOfBoundryException
  114               | CAstException

  115 class_implementation: class_implementation_header class_implementation_body

  116 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER
  117                            | AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER
  118                            | AT_IMPLEMENTATION IDENTIFIER IDENTIFIER
  119                            | AT_IMPLEMENTATION IDENTIFIER

  120 class_implementation_body: instance_variables implementation_definition_list AT_END
  121                          | instance_variables AT_END
  122                          | implementation_definition_list AT_END

  123 implementation_definition_list: implementation_definition_list implementation_definition
  124                               | implementation_definition

  125 implementation_definition: class_implementation_definition
  126                          | instance_implementation_definition

  127 class_implementation_definition: class_implementation_definition_header block_body

  128 class_implementation_definition_header: PLUS p_type method_selector
  129                                       | PLUS method_selector

  130 instance_implementation_definition: instance_implementation_definition_header block_body

  131 instance_implementation_definition_header: MINUS p_type method_selector
  132                                          | MINUS method_selector

  133 statement_list: statement_list statement
  134               | statement

  135 statement: loop_statement
  136          | conditional_statement
  137          | expr SEMI_COMA
  138          | variable_declaration

  139 @1: /* empty */

  140 statement: @1 block_body
  141          | return_statement
  142          | try_catch

  143 return_statement: RETURN expr SEMI_COMA
  144                 | RETURN expr error

  145 loop_statement: for_loop
  146               | while_loop
  147               | do_while_loop

  148 for_loop: for_loop_header statement

  149 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  151                | FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  152                | FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  153                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  155                | FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  156                | FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  157                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  159                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  160                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  161                | FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

  163 for_initializer: INT IDENTIFIER EQUAL expr
  164                | INT IDENTIFIER expr
  165                | INT IDENTIFIER error expr
  166                | IDENTIFIER EQUAL expr
  167                | IDENTIFIER expr
  168                | IDENTIFIER error expr
  169                | IDENTIFIER

  170 logic_expr: expr LESS_THAN expr
  171           | expr MORE_THAN expr
  172           | expr LESS_OR_EQUAL expr
  173           | expr MORE_OR_EQUAL expr
  174           | expr EQUAL_EQUAL expr
  175           | NOT_EQUAL expr
  176           | OPEN_P logic_expr CLOSE_P
  177           | logic_expr AND_AND logic_expr
  178           | logic_expr OR_OR logic_expr

  179 expr: assign_expr
  180     | simple_expr

  181 logic_expr2: expr2 LESS_THAN expr2
  182            | expr2 MORE_THAN expr2
  183            | expr2 LESS_OR_EQUAL expr2
  184            | expr2 MORE_OR_EQUAL expr2
  185            | expr2 EQUAL_EQUAL expr2
  186            | NOT_EQUAL expr2
  187            | OPEN_P logic_expr2 CLOSE_P
  188            | logic_expr2 AND_AND logic_expr2
  189            | logic_expr2 OR_OR logic_expr2
  190            | error expr2
  191            | OPEN_P logic_expr2 error
  192            | error logic_expr2 CLOSE_P

  193 expr2: simple_expr

  194 assign_expr: long_id EQUAL simple_expr

  195 long_id: long_id DOT IDENTIFIER
  196        | message_call
  197        | IDENTIFIER

  198 simple_expr: STRING_VAL
  199            | INT_VAL
  200            | FLOAT_VAL
  201            | CHAR_VAL
  202            | long_id
  203            | simple_expr PLUS simple_expr
  204            | simple_expr MINUS simple_expr
  205            | simple_expr MULTI simple_expr
  206            | simple_expr DIV simple_expr
  207            | OPEN_P simple_expr CLOSE_P
  208            | p_type simple_expr
  209            | method_call

  210 method_call: IDENTIFIER OPEN_P simple_expr CLOSE_P

  211 block_body: OPEN_S statement_list CLOSE_S
  212           | OPEN_S CLOSE_S

  213 while_loop: while_loop_header statement

  214 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P
  215                  | WHILE OPEN_P logic_expr error
  216                  | WHILE logic_expr CLOSE_P
  217                  | WHILE error logic_expr CLOSE_P

  218 do_while_loop: DO statement while_loop_header SEMI_COMA

  219 conditional_statement: if_header statement
  220                      | if_header statement ELSE statement
  221                      | switch

  222 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  223       | SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  224       | SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  225       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  226       | SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  228            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body
  229            | DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA
  230            | DEFAULT SEMI_COLUMN statement error SEMI_COMA

  231 switch_statement: logic_expr
  232                 | expr

  233 case_statement: logic_expr2
  234               | expr2

  235 if_header: IF OPEN_P logic_expr CLOSE_P
  236          | IF OPEN_P logic_expr error
  237          | IF logic_expr CLOSE_P
  238          | IF error logic_expr CLOSE_P

  239 message_call: OPEN_ARR sender message CLOSE_ARR

  240 sender: message_call
  241       | IDENTIFIER

  242 message: IDENTIFIER
  243        | IDENTIFIER SEMI_COLUMN argument_list

  244 argument_list: argument_list argument
  245              | argument

  246 argument: SEMI_COLUMN simple_expr
  247         | error simple_expr
  248         | IDENTIFIER SEMI_COLUMN simple_expr
  249         | IDENTIFIER simple_expr
  250         | IDENTIFIER error simple_expr

  251 protocol: protocol_header protocol_body

  252 protocol_header: AT_PROTOCOL IDENTIFIER

  253 protocol_body: protocol_reference_list interface_declaration_list AT_END
  254              | interface_declaration_list AT_END
  255              | protocol_reference_list AT_END
  256              | AT_END


Terminals, with rules where they appear

$end (0) 0
error (256) 9 23 26 38 40 42 44 91 93 96 97 99 100 105 117 144 150
    152 154 156 165 168 190 191 192 215 217 223 224 225 226 228 230
    236 238 247 250
TRY (258) 109
CATCH (259) 110
NSEXception (260) 110
NUllPointerException (261) 112
OUtOfBoundryException (262) 113
CAstException (263) 114
FINALLY (264) 111
AT_INTERFACE (265) 8 9 10 11 12
IDENTIFIER (266) 8 9 10 11 12 22 23 24 37 38 39 40 41 42 43 44 49 50
    51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 71 85 101 102 104
    105 106 108 116 117 118 119 163 164 165 166 167 168 169 195 197
    210 241 242 243 248 249 250 252
SEMI_COLUMN (267) 8 10 55 56 59 60 101 103 104 116 227 228 229 230
    243 246 248
NSSTRING (268) 83
FLOAT (269) 82
CHAR (270) 81
INT (271) 80 163 164 165
SEMI_COMA (272) 37 39 41 43 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 69 70 71 90 92 94 95 137 143 149 150 151 152 153 154 155
    156 157 158 159 160 161 162 218 227 228 229 230
ID (273)
AT_PUBLIC (274) 36
AT_PROTECTED (275) 35
AT_PRIVATE (276) 34
OPEN_S (277) 25 26 27 49 50 51 52 61 63 64 69 71 74 76 211 212 222
    223 224 225
CLOSE_S (278) 25 49 50 51 52 61 63 64 69 71 74 76 211 212 222 223 224
    226
COMMA (279) 24 65 67 76 77
LESS_THAN (280) 21 170 181
MORE_THAN (281) 21 171 182
AT_END (282) 13 14 15 16 17 18 19 20 120 121 122 253 254 255 256
CONST (283) 41 42 43 44 57 58 59 60
VOID (284) 84
PLUS (285) 90 91 92 93 128 129 203
MINUS (286) 94 95 96 97 131 132 204
OPEN_P (287) 98 100 110 149 150 153 154 157 158 159 160 161 162 176
    187 191 207 210 214 215 222 224 225 226 227 228 235 236
CLOSE_P (288) 98 99 110 149 151 152 153 155 156 157 158 159 160 161
    162 176 187 192 207 210 214 216 217 222 223 225 226 227 228 235
    237 238
AT_IMPLEMENTATION (289) 116 117 118 119
AND_AND (290) 177 188
OR_OR (291) 178 189
STRING_VAL (292) 198
FLOAT_VAL (293) 200
LESS_OR_EQUAL (294) 172 183
CHAR_VAL (295) 201
INT_VAL (296) 61 62 63 67 68 72 73 199
MORE_OR_EQUAL (297) 173 184
MULTI (298) 85 205
EQUAL_EQUAL (299) 174 185
NOT_EQUAL (300) 175 186
FOR (301) 149 150 151 152 153 154 155 156 157 158 159 160 161 162
EQUAL (302) 39 40 43 44 61 63 64 67 68 69 71 163 166 194
DIV (303) 206
WHILE (304) 214 215 216 217
IF (305) 235 236 237 238
OPEN_ARR (306) 61 62 63 64 67 68 72 73 239
CLOSE_ARR (307) 61 62 63 64 67 68 72 73 239
TRUE (308)
FALSE (309)
RETURN (310) 143 144
AT_PROTOCOL (311) 252
DO (312) 218
DOT (313) 195
SYMBOL (314)
SWITCH (315) 222 223 224 225 226
BREAK (316) 227 229
DEFAULT (317) 229 230
CASE (318) 227 228
STRUCT (319) 51 52
TYPEDEF (320) 50
ENUM (321) 49 50
if_h (322)
ELSE (323) 220
expr_1 (324)
p_type_expr_prec (325)
long_id_prec (326)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
program (73)
    on left: 1, on right: 0
components (74)
    on left: 2 3, on right: 1 2
component (75)
    on left: 4 5 6, on right: 2 3
class_interface (76)
    on left: 7, on right: 4
class_interface_header (77)
    on left: 8 9 10 11 12, on right: 7
class_interface_body (78)
    on left: 13 14 15 16 17 18 19 20, on right: 7
protocol_reference_list (79)
    on left: 21, on right: 13 14 15 17 253 255
ids_list (80)
    on left: 22 23 24, on right: 21 23 24 49 50 52
instance_variables (81)
    on left: 25 26 27, on right: 13 14 16 18 120 121
instance_variable_declarations (82)
    on left: 28 29 30, on right: 25 26 27 28
instance_variable_declaration (83)
    on left: 31, on right: 28 29
variable_declaration_list (84)
    on left: 32 33, on right: 30 31 32
visibility_specification (85)
    on left: 34 35 36, on right: 31
variable_declaration (86)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48, on right: 32 33 138
Enum (87)
    on left: 49 50, on right: 45
structrule (88)
    on left: 51 52, on right: 46
variable_declarations (89)
    on left: 53 54 55 56 57 58 59 60, on right: 51 52 54 56 57 59
ArrayOne (90)
    on left: 61 62 63 64, on right: 47
array_body (91)
    on left: 65 66 67 68, on right: 63 64 65 67 74 76
ArrayN (92)
    on left: 69 70 71, on right: 48
Multi (93)
    on left: 72 73, on right: 69 70 71 73
array_body2 (94)
    on left: 74 75 76 77, on right: 71 76 77
type (95)
    on left: 78 79, on right: 37 38 39 40 41 42 43 44 53 54 55 56 57
    58 59 60 61 62 63 64 69 70 71 98 99 100
simple_type (96)
    on left: 80 81 82 83 84, on right: 78
complex_type (97)
    on left: 85, on right: 79
interface_declaration_list (98)
    on left: 86 87, on right: 13 15 16 19 86 253 254
interface_declaration (99)
    on left: 88 89, on right: 86 87
class_method_declaration (100)
    on left: 90 91 92 93, on right: 88
instance_method_declaration (101)
    on left: 94 95 96 97, on right: 89
p_type (102)
    on left: 98 99 100, on right: 90 91 94 96 108 128 131 208
method_selector (103)
    on left: 101 102, on right: 90 91 92 93 94 95 96 97 128 129 131
    132
parameter_list (104)
    on left: 103 104 105 106 107, on right: 101 103 104 105 106
parameter (105)
    on left: 108, on right: 103 104 105 106 107
try_catch (106)
    on left: 109, on right: 142
catch_statment (107)
    on left: 110 111, on right: 109 110
Exception_type (108)
    on left: 112 113 114, on right: 110
class_implementation (109)
    on left: 115, on right: 5
class_implementation_header (110)
    on left: 116 117 118 119, on right: 115
class_implementation_body (111)
    on left: 120 121 122, on right: 115
implementation_definition_list (112)
    on left: 123 124, on right: 120 122 123
implementation_definition (113)
    on left: 125 126, on right: 123 124
class_implementation_definition (114)
    on left: 127, on right: 125
class_implementation_definition_header (115)
    on left: 128 129, on right: 127
instance_implementation_definition (116)
    on left: 130, on right: 126
instance_implementation_definition_header (117)
    on left: 131 132, on right: 130
statement_list (118)
    on left: 133 134, on right: 133 211
statement (119)
    on left: 135 136 137 138 140 141 142, on right: 133 134 148 213
    218 219 220 227 228 229 230
@1 (120)
    on left: 139, on right: 140
return_statement (121)
    on left: 143 144, on right: 141
loop_statement (122)
    on left: 145 146 147, on right: 135
for_loop (123)
    on left: 148, on right: 145
for_loop_header (124)
    on left: 149 150 151 152 153 154 155 156 157 158 159 160 161 162
   , on right: 148
for_initializer (125)
    on left: 163 164 165 166 167 168 169, on right: 149 150 151 152
    157 158 159
logic_expr (126)
    on left: 170 171 172 173 174 175 176 177 178, on right: 149 150
    151 152 153 154 155 156 158 160 176 177 178 214 215 216 217 231
    235 236 237 238
expr (127)
    on left: 179 180, on right: 65 66 67 68 75 77 137 143 144 149 150
    151 152 153 154 155 156 157 161 163 164 165 166 167 168 170 171
    172 173 174 175 232
logic_expr2 (128)
    on left: 181 182 183 184 185 186 187 188 189 190 191 192,
    on right: 187 188 189 191 192 233
expr2 (129)
    on left: 193, on right: 181 182 183 184 185 186 190 234
assign_expr (130)
    on left: 194, on right: 179
long_id (131)
    on left: 195 196 197, on right: 194 195 202
simple_expr (132)
    on left: 198 199 200 201 202 203 204 205 206 207 208 209,
    on right: 39 40 43 44 55 56 59 60 180 193 194 203 204 205 206 207
    208 210 246 247 248 249 250
method_call (133)
    on left: 210, on right: 209
block_body (134)
    on left: 211 212, on right: 109 110 111 127 130 140
while_loop (135)
    on left: 213, on right: 146
while_loop_header (136)
    on left: 214 215 216 217, on right: 213 218
do_while_loop (137)
    on left: 218, on right: 147
conditional_statement (138)
    on left: 219 220 221, on right: 136
switch (139)
    on left: 222 223 224 225 226, on right: 221
switch_body (140)
    on left: 227 228 229 230, on right: 222 223 224 225 226 227 228
switch_statement (141)
    on left: 231 232, on right: 222 223 224 225 226
case_statement (142)
    on left: 233 234, on right: 227 228
if_header (143)
    on left: 235 236 237 238, on right: 219 220
message_call (144)
    on left: 239, on right: 196 240
sender (145)
    on left: 240 241, on right: 239
message (146)
    on left: 242 243, on right: 239
argument_list (147)
    on left: 244 245, on right: 243 244
argument (148)
    on left: 246 247 248 249 250, on right: 244 245
protocol (149)
    on left: 251, on right: 6
protocol_header (150)
    on left: 252, on right: 251
protocol_body (151)
    on left: 253 254 255 256, on right: 251


state 0

    0 $accept: . program $end

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    program                      go to state 4
    components                   go to state 5
    component                    go to state 6
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 1

    8 class_interface_header: AT_INTERFACE . IDENTIFIER SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE . IDENTIFIER error IDENTIFIER
   10                       | AT_INTERFACE . IDENTIFIER SEMI_COLUMN
   11                       | AT_INTERFACE . IDENTIFIER IDENTIFIER
   12                       | AT_INTERFACE . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


state 2

  116 class_implementation_header: AT_IMPLEMENTATION . IDENTIFIER SEMI_COLUMN IDENTIFIER
  117                            | AT_IMPLEMENTATION . IDENTIFIER error IDENTIFIER
  118                            | AT_IMPLEMENTATION . IDENTIFIER IDENTIFIER
  119                            | AT_IMPLEMENTATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 14


state 3

  252 protocol_header: AT_PROTOCOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 15


state 4

    0 $accept: program . $end

    $end  shift, and go to state 16


state 5

    1 program: components .
    2 components: components . component

    AT_INTERFACE       shift, and go to state 1
    AT_IMPLEMENTATION  shift, and go to state 2
    AT_PROTOCOL        shift, and go to state 3

    $default  reduce using rule 1 (program)

    component                    go to state 17
    class_interface              go to state 7
    class_interface_header       go to state 8
    class_implementation         go to state 9
    class_implementation_header  go to state 10
    protocol                     go to state 11
    protocol_header              go to state 12


state 6

    3 components: component .

    $default  reduce using rule 3 (components)


state 7

    4 component: class_interface .

    $default  reduce using rule 4 (component)


state 8

    7 class_interface: class_interface_header . class_interface_body

    OPEN_S     shift, and go to state 18
    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 20
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    class_interface_body         go to state 23
    protocol_reference_list      go to state 24
    instance_variables           go to state 25
    interface_declaration_list   go to state 26
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 9

    5 component: class_implementation .

    $default  reduce using rule 5 (component)


state 10

  115 class_implementation: class_implementation_header . class_implementation_body

    OPEN_S  shift, and go to state 18
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    instance_variables                         go to state 32
    class_implementation_body                  go to state 33
    implementation_definition_list             go to state 34
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 11

    6 component: protocol .

    $default  reduce using rule 6 (component)


state 12

  251 protocol: protocol_header . protocol_body

    LESS_THAN  shift, and go to state 19
    AT_END     shift, and go to state 40
    PLUS       shift, and go to state 21
    MINUS      shift, and go to state 22

    protocol_reference_list      go to state 41
    interface_declaration_list   go to state 42
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29
    protocol_body                go to state 43


state 13

    8 class_interface_header: AT_INTERFACE IDENTIFIER . SEMI_COLUMN IDENTIFIER
    9                       | AT_INTERFACE IDENTIFIER . error IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER . SEMI_COLUMN
   11                       | AT_INTERFACE IDENTIFIER . IDENTIFIER
   12                       | AT_INTERFACE IDENTIFIER .

    error        shift, and go to state 44
    IDENTIFIER   shift, and go to state 45
    SEMI_COLUMN  shift, and go to state 46

    OPEN_S     reduce using rule 12 (class_interface_header)
    LESS_THAN  reduce using rule 12 (class_interface_header)
    AT_END     reduce using rule 12 (class_interface_header)
    PLUS       reduce using rule 12 (class_interface_header)
    MINUS      reduce using rule 12 (class_interface_header)


state 14

  116 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER . SEMI_COLUMN IDENTIFIER
  117                            | AT_IMPLEMENTATION IDENTIFIER . error IDENTIFIER
  118                            | AT_IMPLEMENTATION IDENTIFIER . IDENTIFIER
  119                            | AT_IMPLEMENTATION IDENTIFIER .

    error        shift, and go to state 47
    IDENTIFIER   shift, and go to state 48
    SEMI_COLUMN  shift, and go to state 49

    OPEN_S  reduce using rule 119 (class_implementation_header)
    PLUS    reduce using rule 119 (class_implementation_header)
    MINUS   reduce using rule 119 (class_implementation_header)


state 15

  252 protocol_header: AT_PROTOCOL IDENTIFIER .

    $default  reduce using rule 252 (protocol_header)


state 16

    0 $accept: program $end .

    $default  accept


state 17

    2 components: components component .

    $default  reduce using rule 2 (components)


state 18

   25 instance_variables: OPEN_S . instance_variable_declarations CLOSE_S
   26                   | OPEN_S . instance_variable_declarations error
   27                   | OPEN_S . instance_variable_declarations

    IDENTIFIER    shift, and go to state 50
    NSSTRING      shift, and go to state 51
    FLOAT         shift, and go to state 52
    CHAR          shift, and go to state 53
    INT           shift, and go to state 54
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CONST         shift, and go to state 58
    VOID          shift, and go to state 59
    STRUCT        shift, and go to state 60
    TYPEDEF       shift, and go to state 61
    ENUM          shift, and go to state 62

    instance_variable_declarations  go to state 63
    instance_variable_declaration   go to state 64
    variable_declaration_list       go to state 65
    visibility_specification        go to state 66
    variable_declaration            go to state 67
    Enum                            go to state 68
    structrule                      go to state 69
    ArrayOne                        go to state 70
    ArrayN                          go to state 71
    type                            go to state 72
    simple_type                     go to state 73
    complex_type                    go to state 74


state 19

   21 protocol_reference_list: LESS_THAN . ids_list MORE_THAN

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 76


state 20

   20 class_interface_body: AT_END .

    $default  reduce using rule 20 (class_interface_body)


state 21

   90 class_method_declaration: PLUS . p_type method_selector SEMI_COMA
   91                         | PLUS . p_type method_selector error
   92                         | PLUS . method_selector SEMI_COMA
   93                         | PLUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 80
    method_selector  go to state 81


state 22

   94 instance_method_declaration: MINUS . p_type method_selector SEMI_COMA
   95                            | MINUS . method_selector SEMI_COMA
   96                            | MINUS . p_type method_selector error
   97                            | MINUS . method_selector error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 82
    method_selector  go to state 83


state 23

    7 class_interface: class_interface_header class_interface_body .

    $default  reduce using rule 7 (class_interface)


state 24

   13 class_interface_body: protocol_reference_list . instance_variables interface_declaration_list AT_END
   14                     | protocol_reference_list . instance_variables AT_END
   15                     | protocol_reference_list . interface_declaration_list AT_END
   17                     | protocol_reference_list . AT_END

    OPEN_S  shift, and go to state 18
    AT_END  shift, and go to state 84
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    instance_variables           go to state 85
    interface_declaration_list   go to state 86
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 25

   16 class_interface_body: instance_variables . interface_declaration_list AT_END
   18                     | instance_variables . AT_END

    AT_END  shift, and go to state 87
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 88
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 26

   19 class_interface_body: interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 89
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 27

   87 interface_declaration_list: interface_declaration .

    $default  reduce using rule 87 (interface_declaration_list)


state 28

   88 interface_declaration: class_method_declaration .

    $default  reduce using rule 88 (interface_declaration)


state 29

   89 interface_declaration: instance_method_declaration .

    $default  reduce using rule 89 (interface_declaration)


state 30

  128 class_implementation_definition_header: PLUS . p_type method_selector
  129                                       | PLUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 91
    method_selector  go to state 92


state 31

  131 instance_implementation_definition_header: MINUS . p_type method_selector
  132                                          | MINUS . method_selector

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 78
    OPEN_P      shift, and go to state 79

    p_type           go to state 93
    method_selector  go to state 94


state 32

  120 class_implementation_body: instance_variables . implementation_definition_list AT_END
  121                          | instance_variables . AT_END

    AT_END  shift, and go to state 95
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition_list             go to state 96
    implementation_definition                  go to state 35
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 33

  115 class_implementation: class_implementation_header class_implementation_body .

    $default  reduce using rule 115 (class_implementation)


state 34

  122 class_implementation_body: implementation_definition_list . AT_END
  123 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 97
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 35

  124 implementation_definition_list: implementation_definition .

    $default  reduce using rule 124 (implementation_definition_list)


state 36

  125 implementation_definition: class_implementation_definition .

    $default  reduce using rule 125 (implementation_definition)


state 37

  127 class_implementation_definition: class_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 100


state 38

  126 implementation_definition: instance_implementation_definition .

    $default  reduce using rule 126 (implementation_definition)


state 39

  130 instance_implementation_definition: instance_implementation_definition_header . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 101


state 40

  256 protocol_body: AT_END .

    $default  reduce using rule 256 (protocol_body)


state 41

  253 protocol_body: protocol_reference_list . interface_declaration_list AT_END
  255              | protocol_reference_list . AT_END

    AT_END  shift, and go to state 102
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 103
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 42

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  254 protocol_body: interface_declaration_list . AT_END

    AT_END  shift, and go to state 104
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 43

  251 protocol: protocol_header protocol_body .

    $default  reduce using rule 251 (protocol)


state 44

    9 class_interface_header: AT_INTERFACE IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 105


state 45

   11 class_interface_header: AT_INTERFACE IDENTIFIER IDENTIFIER .

    $default  reduce using rule 11 (class_interface_header)


state 46

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN . IDENTIFIER
   10                       | AT_INTERFACE IDENTIFIER SEMI_COLUMN .

    IDENTIFIER  shift, and go to state 106

    $default  reduce using rule 10 (class_interface_header)


state 47

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error . IDENTIFIER

    IDENTIFIER  shift, and go to state 107


state 48

  118 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER IDENTIFIER .

    $default  reduce using rule 118 (class_implementation_header)


state 49

  116 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN . IDENTIFIER

    IDENTIFIER  shift, and go to state 108


state 50

   85 complex_type: IDENTIFIER . MULTI

    MULTI  shift, and go to state 109


state 51

   83 simple_type: NSSTRING .

    $default  reduce using rule 83 (simple_type)


state 52

   82 simple_type: FLOAT .

    $default  reduce using rule 82 (simple_type)


state 53

   81 simple_type: CHAR .

    $default  reduce using rule 81 (simple_type)


state 54

   80 simple_type: INT .

    $default  reduce using rule 80 (simple_type)


state 55

   36 visibility_specification: AT_PUBLIC .

    $default  reduce using rule 36 (visibility_specification)


state 56

   35 visibility_specification: AT_PROTECTED .

    $default  reduce using rule 35 (visibility_specification)


state 57

   34 visibility_specification: AT_PRIVATE .

    $default  reduce using rule 34 (visibility_specification)


state 58

   41 variable_declaration: CONST . type IDENTIFIER SEMI_COMA
   42                     | CONST . type IDENTIFIER error
   43                     | CONST . type IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST . type IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 110
    simple_type   go to state 73
    complex_type  go to state 74


state 59

   84 simple_type: VOID .

    $default  reduce using rule 84 (simple_type)


state 60

   51 structrule: STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT . IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 111


state 61

   50 Enum: TYPEDEF . ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    ENUM  shift, and go to state 112


state 62

   49 Enum: ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 113


state 63

   25 instance_variables: OPEN_S instance_variable_declarations . CLOSE_S
   26                   | OPEN_S instance_variable_declarations . error
   27                   | OPEN_S instance_variable_declarations .
   28 instance_variable_declarations: instance_variable_declarations . instance_variable_declaration

    error         shift, and go to state 114
    AT_PUBLIC     shift, and go to state 55
    AT_PROTECTED  shift, and go to state 56
    AT_PRIVATE    shift, and go to state 57
    CLOSE_S       shift, and go to state 115

    AT_END  reduce using rule 27 (instance_variables)
    PLUS    reduce using rule 27 (instance_variables)
    MINUS   reduce using rule 27 (instance_variables)

    instance_variable_declaration  go to state 116
    visibility_specification       go to state 66


state 64

   29 instance_variable_declarations: instance_variable_declaration .

    $default  reduce using rule 29 (instance_variable_declarations)


state 65

   30 instance_variable_declarations: variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 30 (instance_variable_declarations)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 66

   31 instance_variable_declaration: visibility_specification . variable_declaration_list

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    variable_declaration_list  go to state 118
    variable_declaration       go to state 67
    Enum                       go to state 68
    structrule                 go to state 69
    ArrayOne                   go to state 70
    ArrayN                     go to state 71
    type                       go to state 72
    simple_type                go to state 73
    complex_type               go to state 74


state 67

   33 variable_declaration_list: variable_declaration .

    $default  reduce using rule 33 (variable_declaration_list)


state 68

   45 variable_declaration: Enum .

    $default  reduce using rule 45 (variable_declaration)


state 69

   46 variable_declaration: structrule .

    $default  reduce using rule 46 (variable_declaration)


state 70

   47 variable_declaration: ArrayOne .

    $default  reduce using rule 47 (variable_declaration)


state 71

   48 variable_declaration: ArrayN .

    $default  reduce using rule 48 (variable_declaration)


state 72

   37 variable_declaration: type . IDENTIFIER SEMI_COMA
   38                     | type . IDENTIFIER error
   39                     | type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   40                     | type . IDENTIFIER EQUAL simple_expr error
   61 ArrayOne: type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type . IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type . IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type . IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type . IDENTIFIER Multi SEMI_COMA
   71       | type . IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    IDENTIFIER  shift, and go to state 119


state 73

   78 type: simple_type .

    $default  reduce using rule 78 (type)


state 74

   79 type: complex_type .

    $default  reduce using rule 79 (type)


state 75

   22 ids_list: IDENTIFIER .

    $default  reduce using rule 22 (ids_list)


state 76

   21 protocol_reference_list: LESS_THAN ids_list . MORE_THAN
   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER

    error      shift, and go to state 120
    COMMA      shift, and go to state 121
    MORE_THAN  shift, and go to state 122


state 77

   99 p_type: error . type CLOSE_P

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74


state 78

  101 method_selector: IDENTIFIER . SEMI_COLUMN parameter_list
  102                | IDENTIFIER .

    SEMI_COLUMN  shift, and go to state 124

    $default  reduce using rule 102 (method_selector)


state 79

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74


state 80

   90 class_method_declaration: PLUS p_type . method_selector SEMI_COMA
   91                         | PLUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 126


state 81

   92 class_method_declaration: PLUS method_selector . SEMI_COMA
   93                         | PLUS method_selector . error

    error      shift, and go to state 127
    SEMI_COMA  shift, and go to state 128


state 82

   94 instance_method_declaration: MINUS p_type . method_selector SEMI_COMA
   96                            | MINUS p_type . method_selector error

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 129


state 83

   95 instance_method_declaration: MINUS method_selector . SEMI_COMA
   97                            | MINUS method_selector . error

    error      shift, and go to state 130
    SEMI_COMA  shift, and go to state 131


state 84

   17 class_interface_body: protocol_reference_list AT_END .

    $default  reduce using rule 17 (class_interface_body)


state 85

   13 class_interface_body: protocol_reference_list instance_variables . interface_declaration_list AT_END
   14                     | protocol_reference_list instance_variables . AT_END

    AT_END  shift, and go to state 132
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration_list   go to state 133
    interface_declaration        go to state 27
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 86

   15 class_interface_body: protocol_reference_list interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 134
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 87

   18 class_interface_body: instance_variables AT_END .

    $default  reduce using rule 18 (class_interface_body)


state 88

   16 class_interface_body: instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 135
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 89

   19 class_interface_body: interface_declaration_list AT_END .

    $default  reduce using rule 19 (class_interface_body)


state 90

   86 interface_declaration_list: interface_declaration_list interface_declaration .

    $default  reduce using rule 86 (interface_declaration_list)


state 91

  128 class_implementation_definition_header: PLUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 136


state 92

  129 class_implementation_definition_header: PLUS method_selector .

    $default  reduce using rule 129 (class_implementation_definition_header)


state 93

  131 instance_implementation_definition_header: MINUS p_type . method_selector

    IDENTIFIER  shift, and go to state 78

    method_selector  go to state 137


state 94

  132 instance_implementation_definition_header: MINUS method_selector .

    $default  reduce using rule 132 (instance_implementation_definition_header)


state 95

  121 class_implementation_body: instance_variables AT_END .

    $default  reduce using rule 121 (class_implementation_body)


state 96

  120 class_implementation_body: instance_variables implementation_definition_list . AT_END
  123 implementation_definition_list: implementation_definition_list . implementation_definition

    AT_END  shift, and go to state 138
    PLUS    shift, and go to state 30
    MINUS   shift, and go to state 31

    implementation_definition                  go to state 98
    class_implementation_definition            go to state 36
    class_implementation_definition_header     go to state 37
    instance_implementation_definition         go to state 38
    instance_implementation_definition_header  go to state 39


state 97

  122 class_implementation_body: implementation_definition_list AT_END .

    $default  reduce using rule 122 (class_implementation_body)


state 98

  123 implementation_definition_list: implementation_definition_list implementation_definition .

    $default  reduce using rule 123 (implementation_definition_list)


state 99

  211 block_body: OPEN_S . statement_list CLOSE_S
  212           | OPEN_S . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 141
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement_list         go to state 157
    statement              go to state 158
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 100

  127 class_implementation_definition: class_implementation_definition_header block_body .

    $default  reduce using rule 127 (class_implementation_definition)


state 101

  130 instance_implementation_definition: instance_implementation_definition_header block_body .

    $default  reduce using rule 130 (instance_implementation_definition)


state 102

  255 protocol_body: protocol_reference_list AT_END .

    $default  reduce using rule 255 (protocol_body)


state 103

   86 interface_declaration_list: interface_declaration_list . interface_declaration
  253 protocol_body: protocol_reference_list interface_declaration_list . AT_END

    AT_END  shift, and go to state 176
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 104

  254 protocol_body: interface_declaration_list AT_END .

    $default  reduce using rule 254 (protocol_body)


state 105

    9 class_interface_header: AT_INTERFACE IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 9 (class_interface_header)


state 106

    8 class_interface_header: AT_INTERFACE IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 8 (class_interface_header)


state 107

  117 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER error IDENTIFIER .

    $default  reduce using rule 117 (class_implementation_header)


state 108

  116 class_implementation_header: AT_IMPLEMENTATION IDENTIFIER SEMI_COLUMN IDENTIFIER .

    $default  reduce using rule 116 (class_implementation_header)


state 109

   85 complex_type: IDENTIFIER MULTI .

    $default  reduce using rule 85 (complex_type)


state 110

   41 variable_declaration: CONST type . IDENTIFIER SEMI_COMA
   42                     | CONST type . IDENTIFIER error
   43                     | CONST type . IDENTIFIER EQUAL simple_expr SEMI_COMA
   44                     | CONST type . IDENTIFIER EQUAL simple_expr error

    IDENTIFIER  shift, and go to state 177


state 111

   51 structrule: STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER . OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA

    OPEN_S  shift, and go to state 178


state 112

   50 Enum: TYPEDEF ENUM . OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA

    OPEN_S  shift, and go to state 179


state 113

   49 Enum: ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 180


state 114

   26 instance_variables: OPEN_S instance_variable_declarations error .

    $default  reduce using rule 26 (instance_variables)


state 115

   25 instance_variables: OPEN_S instance_variable_declarations CLOSE_S .

    $default  reduce using rule 25 (instance_variables)


state 116

   28 instance_variable_declarations: instance_variable_declarations instance_variable_declaration .

    $default  reduce using rule 28 (instance_variable_declarations)


state 117

   32 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 32 (variable_declaration_list)


state 118

   31 instance_variable_declaration: visibility_specification variable_declaration_list .
   32 variable_declaration_list: variable_declaration_list . variable_declaration

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    $default  reduce using rule 31 (instance_variable_declaration)

    variable_declaration  go to state 117
    Enum                  go to state 68
    structrule            go to state 69
    ArrayOne              go to state 70
    ArrayN                go to state 71
    type                  go to state 72
    simple_type           go to state 73
    complex_type          go to state 74


state 119

   37 variable_declaration: type IDENTIFIER . SEMI_COMA
   38                     | type IDENTIFIER . error
   39                     | type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   40                     | type IDENTIFIER . EQUAL simple_expr error
   61 ArrayOne: type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER . OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER . OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   69 ArrayN: type IDENTIFIER . Multi EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER . Multi SEMI_COMA
   71       | type IDENTIFIER . Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA

    error      shift, and go to state 181
    SEMI_COMA  shift, and go to state 182
    EQUAL      shift, and go to state 183
    OPEN_ARR   shift, and go to state 184

    Multi  go to state 185


state 120

   23 ids_list: ids_list error . IDENTIFIER

    IDENTIFIER  shift, and go to state 186


state 121

   24 ids_list: ids_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 187


state 122

   21 protocol_reference_list: LESS_THAN ids_list MORE_THAN .

    $default  reduce using rule 21 (protocol_reference_list)


state 123

   99 p_type: error type . CLOSE_P

    CLOSE_P  shift, and go to state 188


state 124

  101 method_selector: IDENTIFIER SEMI_COLUMN . parameter_list

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type          go to state 189
    parameter_list  go to state 190
    parameter       go to state 191


state 125

   98 p_type: OPEN_P type . CLOSE_P
  100       | OPEN_P type . error

    error    shift, and go to state 192
    CLOSE_P  shift, and go to state 193


state 126

   90 class_method_declaration: PLUS p_type method_selector . SEMI_COMA
   91                         | PLUS p_type method_selector . error

    error      shift, and go to state 194
    SEMI_COMA  shift, and go to state 195


state 127

   93 class_method_declaration: PLUS method_selector error .

    $default  reduce using rule 93 (class_method_declaration)


state 128

   92 class_method_declaration: PLUS method_selector SEMI_COMA .

    $default  reduce using rule 92 (class_method_declaration)


state 129

   94 instance_method_declaration: MINUS p_type method_selector . SEMI_COMA
   96                            | MINUS p_type method_selector . error

    error      shift, and go to state 196
    SEMI_COMA  shift, and go to state 197


state 130

   97 instance_method_declaration: MINUS method_selector error .

    $default  reduce using rule 97 (instance_method_declaration)


state 131

   95 instance_method_declaration: MINUS method_selector SEMI_COMA .

    $default  reduce using rule 95 (instance_method_declaration)


state 132

   14 class_interface_body: protocol_reference_list instance_variables AT_END .

    $default  reduce using rule 14 (class_interface_body)


state 133

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list . AT_END
   86 interface_declaration_list: interface_declaration_list . interface_declaration

    AT_END  shift, and go to state 198
    PLUS    shift, and go to state 21
    MINUS   shift, and go to state 22

    interface_declaration        go to state 90
    class_method_declaration     go to state 28
    instance_method_declaration  go to state 29


state 134

   15 class_interface_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 15 (class_interface_body)


state 135

   16 class_interface_body: instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 16 (class_interface_body)


state 136

  128 class_implementation_definition_header: PLUS p_type method_selector .

    $default  reduce using rule 128 (class_implementation_definition_header)


state 137

  131 instance_implementation_definition_header: MINUS p_type method_selector .

    $default  reduce using rule 131 (instance_implementation_definition_header)


state 138

  120 class_implementation_body: instance_variables implementation_definition_list AT_END .

    $default  reduce using rule 120 (class_implementation_body)


state 139

  109 try_catch: TRY . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 199


state 140

   85 complex_type: IDENTIFIER . MULTI
  197 long_id: IDENTIFIER .
  210 method_call: IDENTIFIER . OPEN_P simple_expr CLOSE_P

    OPEN_P  shift, and go to state 200
    MULTI   shift, and go to state 109

    $default  reduce using rule 197 (long_id)


state 141

  212 block_body: OPEN_S CLOSE_S .

    $default  reduce using rule 212 (block_body)


state 142

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  207 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 202
    method_call   go to state 168
    message_call  go to state 175


state 143

  198 simple_expr: STRING_VAL .

    $default  reduce using rule 198 (simple_expr)


state 144

  200 simple_expr: FLOAT_VAL .

    $default  reduce using rule 200 (simple_expr)


state 145

  201 simple_expr: CHAR_VAL .

    $default  reduce using rule 201 (simple_expr)


state 146

  199 simple_expr: INT_VAL .

    $default  reduce using rule 199 (simple_expr)


state 147

  149 for_loop_header: FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  151                | FOR . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  152                | FOR . error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  153                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error
  155                | FOR . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  156                | FOR . error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  157                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  158                | FOR . OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  159                | FOR . OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  160                | FOR . OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  161                | FOR . OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P
  162                | FOR . OPEN_P SEMI_COMA SEMI_COMA CLOSE_P

    error       shift, and go to state 203
    IDENTIFIER  shift, and go to state 204
    INT         shift, and go to state 205
    SEMI_COMA   shift, and go to state 206
    OPEN_P      shift, and go to state 207

    for_initializer  go to state 208


state 148

  214 while_loop_header: WHILE . OPEN_P logic_expr CLOSE_P
  215                  | WHILE . OPEN_P logic_expr error
  216                  | WHILE . logic_expr CLOSE_P
  217                  | WHILE . error logic_expr CLOSE_P

    error       shift, and go to state 209
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 211
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 213
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 149

  235 if_header: IF . OPEN_P logic_expr CLOSE_P
  236          | IF . OPEN_P logic_expr error
  237          | IF . logic_expr CLOSE_P
  238          | IF . error logic_expr CLOSE_P

    error       shift, and go to state 215
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 216
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 217
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 150

  239 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 218
    OPEN_ARR    shift, and go to state 150

    message_call  go to state 219
    sender        go to state 220


state 151

  143 return_statement: RETURN . expr SEMI_COMA
  144                 | RETURN . expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 221
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 152

  218 do_while_loop: DO . statement while_loop_header SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 222
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 153

  222 switch: SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  223       | SWITCH . error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  224       | SWITCH . OPEN_P switch_statement error OPEN_S switch_body CLOSE_S
  225       | SWITCH . OPEN_P switch_statement CLOSE_P OPEN_S switch_body error
  226       | SWITCH . OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S

    error   shift, and go to state 223
    OPEN_P  shift, and go to state 224


state 154

  138 statement: variable_declaration .

    $default  reduce using rule 138 (statement)


state 155

  208 simple_expr: p_type . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 225
    method_call   go to state 168
    message_call  go to state 175


state 156

  142 statement: try_catch .

    $default  reduce using rule 142 (statement)


state 157

  133 statement_list: statement_list . statement
  211 block_body: OPEN_S statement_list . CLOSE_S

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 226
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 227
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 158

  134 statement_list: statement .

    $default  reduce using rule 134 (statement_list)


state 159

  140 statement: @1 . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 228


state 160

  141 statement: return_statement .

    $default  reduce using rule 141 (statement)


state 161

  135 statement: loop_statement .

    $default  reduce using rule 135 (statement)


state 162

  145 loop_statement: for_loop .

    $default  reduce using rule 145 (loop_statement)


state 163

  148 for_loop: for_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 229
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 164

  137 statement: expr . SEMI_COMA

    SEMI_COMA  shift, and go to state 230


state 165

  179 expr: assign_expr .

    $default  reduce using rule 179 (expr)


state 166

  194 assign_expr: long_id . EQUAL simple_expr
  195 long_id: long_id . DOT IDENTIFIER
  202 simple_expr: long_id .

    EQUAL  shift, and go to state 231
    DOT    shift, and go to state 232

    $default  reduce using rule 202 (simple_expr)


state 167

  180 expr: simple_expr .
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 180 (expr)


state 168

  209 simple_expr: method_call .

    $default  reduce using rule 209 (simple_expr)


state 169

  146 loop_statement: while_loop .

    $default  reduce using rule 146 (loop_statement)


state 170

  213 while_loop: while_loop_header . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 237
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 171

  147 loop_statement: do_while_loop .

    $default  reduce using rule 147 (loop_statement)


state 172

  136 statement: conditional_statement .

    $default  reduce using rule 136 (statement)


state 173

  221 conditional_statement: switch .

    $default  reduce using rule 221 (conditional_statement)


state 174

  219 conditional_statement: if_header . statement
  220                      | if_header . statement ELSE statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 238
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 175

  196 long_id: message_call .

    $default  reduce using rule 196 (long_id)


state 176

  253 protocol_body: protocol_reference_list interface_declaration_list AT_END .

    $default  reduce using rule 253 (protocol_body)


state 177

   41 variable_declaration: CONST type IDENTIFIER . SEMI_COMA
   42                     | CONST type IDENTIFIER . error
   43                     | CONST type IDENTIFIER . EQUAL simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER . EQUAL simple_expr error

    error      shift, and go to state 239
    SEMI_COMA  shift, and go to state 240
    EQUAL      shift, and go to state 241


state 178

   51 structrule: STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S . variable_declarations CLOSE_S ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 242
    VOID        shift, and go to state 59

    variable_declarations  go to state 243
    type                   go to state 244
    simple_type            go to state 73
    complex_type           go to state 74


state 179

   50 Enum: TYPEDEF ENUM OPEN_S . ids_list CLOSE_S IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 75

    ids_list  go to state 245


state 180

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   49 Enum: ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 246
    COMMA    shift, and go to state 121


state 181

   38 variable_declaration: type IDENTIFIER error .

    $default  reduce using rule 38 (variable_declaration)


state 182

   37 variable_declaration: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 37 (variable_declaration)


state 183

   39 variable_declaration: type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   40                     | type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 247
    method_call   go to state 168
    message_call  go to state 175


state 184

   61 ArrayOne: type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR . INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   64         | type IDENTIFIER OPEN_ARR . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR . INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    INT_VAL    shift, and go to state 248
    CLOSE_ARR  shift, and go to state 249


state 185

   69 ArrayN: type IDENTIFIER Multi . EQUAL OPEN_S CLOSE_S SEMI_COMA
   70       | type IDENTIFIER Multi . SEMI_COMA
   71       | type IDENTIFIER Multi . EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA
   73 Multi: Multi . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 250
    EQUAL      shift, and go to state 251
    OPEN_ARR   shift, and go to state 252


state 186

   23 ids_list: ids_list error IDENTIFIER .

    $default  reduce using rule 23 (ids_list)


state 187

   24 ids_list: ids_list COMMA IDENTIFIER .

    $default  reduce using rule 24 (ids_list)


state 188

   99 p_type: error type CLOSE_P .

    $default  reduce using rule 99 (p_type)


state 189

  108 parameter: p_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 253


state 190

  101 method_selector: IDENTIFIER SEMI_COLUMN parameter_list .
  103 parameter_list: parameter_list . SEMI_COLUMN parameter
  104               | parameter_list . IDENTIFIER SEMI_COLUMN parameter
  105               | parameter_list . IDENTIFIER error parameter
  106               | parameter_list . IDENTIFIER parameter

    IDENTIFIER   shift, and go to state 254
    SEMI_COLUMN  shift, and go to state 255

    $default  reduce using rule 101 (method_selector)


state 191

  107 parameter_list: parameter .

    $default  reduce using rule 107 (parameter_list)


state 192

  100 p_type: OPEN_P type error .

    $default  reduce using rule 100 (p_type)


state 193

   98 p_type: OPEN_P type CLOSE_P .

    $default  reduce using rule 98 (p_type)


state 194

   91 class_method_declaration: PLUS p_type method_selector error .

    $default  reduce using rule 91 (class_method_declaration)


state 195

   90 class_method_declaration: PLUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 90 (class_method_declaration)


state 196

   96 instance_method_declaration: MINUS p_type method_selector error .

    $default  reduce using rule 96 (instance_method_declaration)


state 197

   94 instance_method_declaration: MINUS p_type method_selector SEMI_COMA .

    $default  reduce using rule 94 (instance_method_declaration)


state 198

   13 class_interface_body: protocol_reference_list instance_variables interface_declaration_list AT_END .

    $default  reduce using rule 13 (class_interface_body)


state 199

  109 try_catch: TRY block_body . catch_statment

    CATCH    shift, and go to state 256
    FINALLY  shift, and go to state 257

    catch_statment  go to state 258


state 200

  210 method_call: IDENTIFIER OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 259
    method_call   go to state 168
    message_call  go to state 175


state 201

  195 long_id: long_id . DOT IDENTIFIER
  202 simple_expr: long_id .

    DOT  shift, and go to state 232

    $default  reduce using rule 202 (simple_expr)


state 202

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  207            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 233
    MINUS    shift, and go to state 234
    CLOSE_P  shift, and go to state 260
    MULTI    shift, and go to state 235
    DIV      shift, and go to state 236


state 203

  152 for_loop_header: FOR error . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  156                | FOR error . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    IDENTIFIER  shift, and go to state 204
    INT         shift, and go to state 205
    SEMI_COMA   shift, and go to state 261

    for_initializer  go to state 262


state 204

  166 for_initializer: IDENTIFIER . EQUAL expr
  167                | IDENTIFIER . expr
  168                | IDENTIFIER . error expr
  169                | IDENTIFIER .

    error       shift, and go to state 263
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    EQUAL       shift, and go to state 264
    OPEN_ARR    shift, and go to state 150

    SEMI_COMA  reduce using rule 169 (for_initializer)

    p_type        go to state 155
    expr          go to state 265
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 205

  163 for_initializer: INT . IDENTIFIER EQUAL expr
  164                | INT . IDENTIFIER expr
  165                | INT . IDENTIFIER error expr

    IDENTIFIER  shift, and go to state 266


state 206

  155 for_loop_header: FOR SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 268
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 207

  149 for_loop_header: FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA expr error
  153                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA expr error
  157                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P . for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  159                | FOR OPEN_P . for_initializer SEMI_COMA SEMI_COMA CLOSE_P
  160                | FOR OPEN_P . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  161                | FOR OPEN_P . SEMI_COMA SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P . SEMI_COMA SEMI_COMA CLOSE_P

    IDENTIFIER  shift, and go to state 204
    INT         shift, and go to state 205
    SEMI_COMA   shift, and go to state 269

    for_initializer  go to state 270


state 208

  151 for_loop_header: FOR for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 271


state 209

   99 p_type: error . type CLOSE_P
  217 while_loop_header: WHILE error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 272
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 210

  197 long_id: IDENTIFIER .
  210 method_call: IDENTIFIER . OPEN_P simple_expr CLOSE_P

    OPEN_P  shift, and go to state 200

    $default  reduce using rule 197 (long_id)


state 211

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  176 logic_expr: OPEN_P . logic_expr CLOSE_P
  207 simple_expr: OPEN_P . simple_expr CLOSE_P
  214 while_loop_header: WHILE OPEN_P . logic_expr CLOSE_P
  215                  | WHILE OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 273
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 274
    method_call   go to state 168
    message_call  go to state 175


state 212

  175 logic_expr: NOT_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 275
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 213

  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  216 while_loop_header: WHILE logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 276
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 214

  170 logic_expr: expr . LESS_THAN expr
  171           | expr . MORE_THAN expr
  172           | expr . LESS_OR_EQUAL expr
  173           | expr . MORE_OR_EQUAL expr
  174           | expr . EQUAL_EQUAL expr

    LESS_THAN      shift, and go to state 279
    MORE_THAN      shift, and go to state 280
    LESS_OR_EQUAL  shift, and go to state 281
    MORE_OR_EQUAL  shift, and go to state 282
    EQUAL_EQUAL    shift, and go to state 283


state 215

   99 p_type: error . type CLOSE_P
  238 if_header: IF error . logic_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 284
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 216

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  176 logic_expr: OPEN_P . logic_expr CLOSE_P
  207 simple_expr: OPEN_P . simple_expr CLOSE_P
  235 if_header: IF OPEN_P . logic_expr CLOSE_P
  236          | IF OPEN_P . logic_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 285
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 274
    method_call   go to state 168
    message_call  go to state 175


state 217

  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  237 if_header: IF logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 286
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 218

  241 sender: IDENTIFIER .

    $default  reduce using rule 241 (sender)


state 219

  240 sender: message_call .

    $default  reduce using rule 240 (sender)


state 220

  239 message_call: OPEN_ARR sender . message CLOSE_ARR

    IDENTIFIER  shift, and go to state 287

    message  go to state 288


state 221

  143 return_statement: RETURN expr . SEMI_COMA
  144                 | RETURN expr . error

    error      shift, and go to state 289
    SEMI_COMA  shift, and go to state 290


state 222

  218 do_while_loop: DO statement . while_loop_header SEMI_COMA

    WHILE  shift, and go to state 148

    while_loop_header  go to state 291


state 223

  223 switch: SWITCH error . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type            go to state 155
    logic_expr        go to state 292
    expr              go to state 293
    assign_expr       go to state 165
    long_id           go to state 166
    simple_expr       go to state 167
    method_call       go to state 168
    switch_statement  go to state 294
    message_call      go to state 175


state 224

  222 switch: SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body CLOSE_S
  224       | SWITCH OPEN_P . switch_statement error OPEN_S switch_body CLOSE_S
  225       | SWITCH OPEN_P . switch_statement CLOSE_P OPEN_S switch_body error
  226       | SWITCH OPEN_P . switch_statement CLOSE_P error switch_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type            go to state 155
    logic_expr        go to state 292
    expr              go to state 293
    assign_expr       go to state 165
    long_id           go to state 166
    simple_expr       go to state 167
    method_call       go to state 168
    switch_statement  go to state 295
    message_call      go to state 175


state 225

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  208            | p_type simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 208 (simple_expr)


state 226

  211 block_body: OPEN_S statement_list CLOSE_S .

    $default  reduce using rule 211 (block_body)


state 227

  133 statement_list: statement_list statement .

    $default  reduce using rule 133 (statement_list)


state 228

  140 statement: @1 block_body .

    $default  reduce using rule 140 (statement)


state 229

  148 for_loop: for_loop_header statement .

    $default  reduce using rule 148 (for_loop)


state 230

  137 statement: expr SEMI_COMA .

    $default  reduce using rule 137 (statement)


state 231

  194 assign_expr: long_id EQUAL . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 296
    method_call   go to state 168
    message_call  go to state 175


state 232

  195 long_id: long_id DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 297


state 233

  203 simple_expr: simple_expr PLUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 298
    method_call   go to state 168
    message_call  go to state 175


state 234

  204 simple_expr: simple_expr MINUS . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 299
    method_call   go to state 168
    message_call  go to state 175


state 235

  205 simple_expr: simple_expr MULTI . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 300
    method_call   go to state 168
    message_call  go to state 175


state 236

  206 simple_expr: simple_expr DIV . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 301
    method_call   go to state 168
    message_call  go to state 175


state 237

  213 while_loop: while_loop_header statement .

    $default  reduce using rule 213 (while_loop)


state 238

  219 conditional_statement: if_header statement .
  220                      | if_header statement . ELSE statement

    ELSE  shift, and go to state 302

    $default  reduce using rule 219 (conditional_statement)


state 239

   42 variable_declaration: CONST type IDENTIFIER error .

    $default  reduce using rule 42 (variable_declaration)


state 240

   41 variable_declaration: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 41 (variable_declaration)


state 241

   43 variable_declaration: CONST type IDENTIFIER EQUAL . simple_expr SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL . simple_expr error

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 303
    method_call   go to state 168
    message_call  go to state 175


state 242

   58 variable_declarations: CONST . type IDENTIFIER SEMI_COMA
   60                      | CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 304
    simple_type   go to state 73
    complex_type  go to state 74


state 243

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations . CLOSE_S ids_list SEMI_COMA
   54 variable_declarations: variable_declarations . type IDENTIFIER SEMI_COMA
   56                      | variable_declarations . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA
   57                      | variable_declarations . CONST type IDENTIFIER SEMI_COMA
   59                      | variable_declarations . CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CLOSE_S     shift, and go to state 305
    CONST       shift, and go to state 306
    VOID        shift, and go to state 59

    type          go to state 307
    simple_type   go to state 73
    complex_type  go to state 74


state 244

   53 variable_declarations: type . IDENTIFIER SEMI_COMA
   55                      | type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 308


state 245

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   50 Enum: TYPEDEF ENUM OPEN_S ids_list . CLOSE_S IDENTIFIER SEMI_COMA

    error    shift, and go to state 120
    CLOSE_S  shift, and go to state 309
    COMMA    shift, and go to state 121


state 246

   49 Enum: ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 310


state 247

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   40                     | type IDENTIFIER EQUAL simple_expr . error
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    error      shift, and go to state 311
    SEMI_COMA  shift, and go to state 312
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 248

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL . CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL . CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR

    CLOSE_ARR  shift, and go to state 313


state 249

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA

    EQUAL  shift, and go to state 314


state 250

   70 ArrayN: type IDENTIFIER Multi SEMI_COMA .

    $default  reduce using rule 70 (ArrayN)


state 251

   69 ArrayN: type IDENTIFIER Multi EQUAL . OPEN_S CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL . OPEN_S array_body2 CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 315


state 252

   73 Multi: Multi OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 316


state 253

  108 parameter: p_type IDENTIFIER .

    $default  reduce using rule 108 (parameter)


state 254

  104 parameter_list: parameter_list IDENTIFIER . SEMI_COLUMN parameter
  105               | parameter_list IDENTIFIER . error parameter
  106               | parameter_list IDENTIFIER . parameter

    error        shift, and go to state 317
    SEMI_COLUMN  shift, and go to state 318
    OPEN_P       shift, and go to state 79

    p_type     go to state 189
    parameter  go to state 319


state 255

  103 parameter_list: parameter_list SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 189
    parameter  go to state 320


state 256

  110 catch_statment: CATCH . OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment

    OPEN_P  shift, and go to state 321


state 257

  111 catch_statment: FINALLY . block_body

    OPEN_S  shift, and go to state 99

    block_body  go to state 322


state 258

  109 try_catch: TRY block_body catch_statment .

    $default  reduce using rule 109 (try_catch)


state 259

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  210 method_call: IDENTIFIER OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 233
    MINUS    shift, and go to state 234
    CLOSE_P  shift, and go to state 323
    MULTI    shift, and go to state 235
    DIV      shift, and go to state 236


state 260

  207 simple_expr: OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 207 (simple_expr)


state 261

  156 for_loop_header: FOR error SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 324
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 262

  152 for_loop_header: FOR error for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P

    SEMI_COMA  shift, and go to state 325


state 263

   99 p_type: error . type CLOSE_P
  168 for_initializer: IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    expr          go to state 326
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 264

  166 for_initializer: IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 327
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 265

  167 for_initializer: IDENTIFIER expr .

    $default  reduce using rule 167 (for_initializer)


state 266

  163 for_initializer: INT IDENTIFIER . EQUAL expr
  164                | INT IDENTIFIER . expr
  165                | INT IDENTIFIER . error expr

    error       shift, and go to state 328
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    EQUAL       shift, and go to state 329
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 330
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 267

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  176 logic_expr: OPEN_P . logic_expr CLOSE_P
  207 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr    go to state 331
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 274
    method_call   go to state 168
    message_call  go to state 175


state 268

  155 for_loop_header: FOR SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 332
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 269

  153 for_loop_header: FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA expr error
  160                | FOR OPEN_P SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  161                | FOR OPEN_P SEMI_COMA . SEMI_COMA expr CLOSE_P
  162                | FOR OPEN_P SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    SEMI_COMA   shift, and go to state 333
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 334
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 270

  149 for_loop_header: FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA expr error
  157                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer . SEMI_COMA logic_expr SEMI_COMA CLOSE_P
  159                | FOR OPEN_P for_initializer . SEMI_COMA SEMI_COMA CLOSE_P

    SEMI_COMA  shift, and go to state 335


state 271

  151 for_loop_header: FOR for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 336
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 272

  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  217 while_loop_header: WHILE error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 337
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 273

  176 logic_expr: OPEN_P logic_expr . CLOSE_P
  177           | logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  214 while_loop_header: WHILE OPEN_P logic_expr . CLOSE_P
  215                  | WHILE OPEN_P logic_expr . error

    error    shift, and go to state 338
    CLOSE_P  shift, and go to state 339
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 274

  180 expr: simple_expr .
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  207            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 233
    MINUS    shift, and go to state 234
    CLOSE_P  shift, and go to state 260
    MULTI    shift, and go to state 235
    DIV      shift, and go to state 236

    $default  reduce using rule 180 (expr)


state 275

  175 logic_expr: NOT_EQUAL expr .

    $default  reduce using rule 175 (logic_expr)


state 276

  216 while_loop_header: WHILE logic_expr CLOSE_P .

    $default  reduce using rule 216 (while_loop_header)


state 277

  177 logic_expr: logic_expr AND_AND . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 340
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 278

  178 logic_expr: logic_expr OR_OR . logic_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 341
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 279

  170 logic_expr: expr LESS_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 342
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 280

  171 logic_expr: expr MORE_THAN . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 343
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 281

  172 logic_expr: expr LESS_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 344
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 282

  173 logic_expr: expr MORE_OR_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 345
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 283

  174 logic_expr: expr EQUAL_EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 346
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 284

  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  238 if_header: IF error logic_expr . CLOSE_P

    CLOSE_P  shift, and go to state 347
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 285

  176 logic_expr: OPEN_P logic_expr . CLOSE_P
  177           | logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  235 if_header: IF OPEN_P logic_expr . CLOSE_P
  236          | IF OPEN_P logic_expr . error

    error    shift, and go to state 348
    CLOSE_P  shift, and go to state 349
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 286

  237 if_header: IF logic_expr CLOSE_P .

    $default  reduce using rule 237 (if_header)


state 287

  242 message: IDENTIFIER .
  243        | IDENTIFIER . SEMI_COLUMN argument_list

    SEMI_COLUMN  shift, and go to state 350

    $default  reduce using rule 242 (message)


state 288

  239 message_call: OPEN_ARR sender message . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 351


state 289

  144 return_statement: RETURN expr error .

    $default  reduce using rule 144 (return_statement)


state 290

  143 return_statement: RETURN expr SEMI_COMA .

    $default  reduce using rule 143 (return_statement)


state 291

  218 do_while_loop: DO statement while_loop_header . SEMI_COMA

    SEMI_COMA  shift, and go to state 352


state 292

  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  231 switch_statement: logic_expr .

    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278

    $default  reduce using rule 231 (switch_statement)


state 293

  170 logic_expr: expr . LESS_THAN expr
  171           | expr . MORE_THAN expr
  172           | expr . LESS_OR_EQUAL expr
  173           | expr . MORE_OR_EQUAL expr
  174           | expr . EQUAL_EQUAL expr
  232 switch_statement: expr .

    LESS_THAN      shift, and go to state 279
    MORE_THAN      shift, and go to state 280
    LESS_OR_EQUAL  shift, and go to state 281
    MORE_OR_EQUAL  shift, and go to state 282
    EQUAL_EQUAL    shift, and go to state 283

    $default  reduce using rule 232 (switch_statement)


state 294

  223 switch: SWITCH error switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S

    CLOSE_P  shift, and go to state 353


state 295

  222 switch: SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body CLOSE_S
  224       | SWITCH OPEN_P switch_statement . error OPEN_S switch_body CLOSE_S
  225       | SWITCH OPEN_P switch_statement . CLOSE_P OPEN_S switch_body error
  226       | SWITCH OPEN_P switch_statement . CLOSE_P error switch_body CLOSE_S

    error    shift, and go to state 354
    CLOSE_P  shift, and go to state 355


state 296

  194 assign_expr: long_id EQUAL simple_expr .
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 194 (assign_expr)


state 297

  195 long_id: long_id DOT IDENTIFIER .

    $default  reduce using rule 195 (long_id)


state 298

  203 simple_expr: simple_expr . PLUS simple_expr
  203            | simple_expr PLUS simple_expr .
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 203 (simple_expr)


state 299

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  204            | simple_expr MINUS simple_expr .
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 204 (simple_expr)


state 300

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  205            | simple_expr MULTI simple_expr .
  206            | simple_expr . DIV simple_expr

    $default  reduce using rule 205 (simple_expr)


state 301

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  206            | simple_expr DIV simple_expr .

    $default  reduce using rule 206 (simple_expr)


state 302

  220 conditional_statement: if_header statement ELSE . statement

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 356
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 303

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr . SEMI_COMA
   44                     | CONST type IDENTIFIER EQUAL simple_expr . error
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    error      shift, and go to state 357
    SEMI_COMA  shift, and go to state 358
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 304

   58 variable_declarations: CONST type . IDENTIFIER SEMI_COMA
   60                      | CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 359


state 305

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . SEMI_COMA
   52           | STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S . ids_list SEMI_COMA

    IDENTIFIER  shift, and go to state 75
    SEMI_COMA   shift, and go to state 360

    ids_list  go to state 361


state 306

   57 variable_declarations: variable_declarations CONST . type IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST . type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59

    type          go to state 362
    simple_type   go to state 73
    complex_type  go to state 74


state 307

   54 variable_declarations: variable_declarations type . IDENTIFIER SEMI_COMA
   56                      | variable_declarations type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 363


state 308

   53 variable_declarations: type IDENTIFIER . SEMI_COMA
   55                      | type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 364
    SEMI_COMA    shift, and go to state 365


state 309

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S . IDENTIFIER SEMI_COMA

    IDENTIFIER  shift, and go to state 366


state 310

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 367


state 311

   40 variable_declaration: type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 40 (variable_declaration)


state 312

   39 variable_declaration: type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 39 (variable_declaration)


state 313

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S CLOSE_S SEMI_COMA
   62         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR . EQUAL OPEN_S array_body CLOSE_S SEMI_COMA
   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR . OPEN_ARR INT_VAL CLOSE_ARR

    SEMI_COMA  shift, and go to state 368
    EQUAL      shift, and go to state 369
    OPEN_ARR   shift, and go to state 370


state 314

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 371


state 315

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S . CLOSE_S SEMI_COMA
   71       | type IDENTIFIER Multi EQUAL OPEN_S . array_body2 CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_S      shift, and go to state 372
    CLOSE_S     shift, and go to state 373
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    array_body2   go to state 374
    p_type        go to state 155
    expr          go to state 375
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 316

   73 Multi: Multi OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 376


state 317

   99 p_type: error . type CLOSE_P
  105 parameter_list: parameter_list IDENTIFIER error . parameter

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 50
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 79

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 189
    parameter     go to state 377


state 318

  104 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN . parameter

    error   shift, and go to state 77
    OPEN_P  shift, and go to state 79

    p_type     go to state 189
    parameter  go to state 378


state 319

  106 parameter_list: parameter_list IDENTIFIER parameter .

    $default  reduce using rule 106 (parameter_list)


state 320

  103 parameter_list: parameter_list SEMI_COLUMN parameter .

    $default  reduce using rule 103 (parameter_list)


state 321

  110 catch_statment: CATCH OPEN_P . NSEXception Exception_type CLOSE_P block_body catch_statment

    NSEXception  shift, and go to state 379


state 322

  111 catch_statment: FINALLY block_body .

    $default  reduce using rule 111 (catch_statment)


state 323

  210 method_call: IDENTIFIER OPEN_P simple_expr CLOSE_P .

    $default  reduce using rule 210 (method_call)


state 324

  156 for_loop_header: FOR error SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 380
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 325

  152 for_loop_header: FOR error for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 381
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 326

  168 for_initializer: IDENTIFIER error expr .

    $default  reduce using rule 168 (for_initializer)


state 327

  166 for_initializer: IDENTIFIER EQUAL expr .

    $default  reduce using rule 166 (for_initializer)


state 328

   99 p_type: error . type CLOSE_P
  165 for_initializer: INT IDENTIFIER error . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    expr          go to state 382
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 329

  163 for_initializer: INT IDENTIFIER EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 383
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 330

  164 for_initializer: INT IDENTIFIER expr .

    $default  reduce using rule 164 (for_initializer)


state 331

  176 logic_expr: OPEN_P logic_expr . CLOSE_P
  177           | logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr

    CLOSE_P  shift, and go to state 384
    AND_AND  shift, and go to state 277
    OR_OR    shift, and go to state 278


state 332

  155 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 385
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 333

  161 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA . expr CLOSE_P
  162                | FOR OPEN_P SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 386
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 387
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 334

  153 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  154                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA expr error
  160                | FOR OPEN_P SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 388
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 335

  149 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr CLOSE_P
  150                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA expr error
  157                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA expr CLOSE_P
  158                | FOR OPEN_P for_initializer SEMI_COMA . logic_expr SEMI_COMA CLOSE_P
  159                | FOR OPEN_P for_initializer SEMI_COMA . SEMI_COMA CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    SEMI_COMA   shift, and go to state 389
    OPEN_P      shift, and go to state 267
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 212
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr    go to state 390
    expr          go to state 214
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 336

  151 for_loop_header: FOR for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 391
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 337

  217 while_loop_header: WHILE error logic_expr CLOSE_P .

    $default  reduce using rule 217 (while_loop_header)


state 338

  215 while_loop_header: WHILE OPEN_P logic_expr error .

    $default  reduce using rule 215 (while_loop_header)


state 339

  176 logic_expr: OPEN_P logic_expr CLOSE_P .
  214 while_loop_header: WHILE OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 176 (logic_expr)
    AND_AND   reduce using rule 176 (logic_expr)
    OR_OR     reduce using rule 176 (logic_expr)
    $default  reduce using rule 214 (while_loop_header)


state 340

  177 logic_expr: logic_expr . AND_AND logic_expr
  177           | logic_expr AND_AND logic_expr .
  178           | logic_expr . OR_OR logic_expr

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 177 (logic_expr)


state 341

  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr
  178           | logic_expr OR_OR logic_expr .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 178 (logic_expr)


state 342

  170 logic_expr: expr LESS_THAN expr .

    $default  reduce using rule 170 (logic_expr)


state 343

  171 logic_expr: expr MORE_THAN expr .

    $default  reduce using rule 171 (logic_expr)


state 344

  172 logic_expr: expr LESS_OR_EQUAL expr .

    $default  reduce using rule 172 (logic_expr)


state 345

  173 logic_expr: expr MORE_OR_EQUAL expr .

    $default  reduce using rule 173 (logic_expr)


state 346

  174 logic_expr: expr EQUAL_EQUAL expr .

    $default  reduce using rule 174 (logic_expr)


state 347

  238 if_header: IF error logic_expr CLOSE_P .

    $default  reduce using rule 238 (if_header)


state 348

  236 if_header: IF OPEN_P logic_expr error .

    $default  reduce using rule 236 (if_header)


state 349

  176 logic_expr: OPEN_P logic_expr CLOSE_P .
  235 if_header: IF OPEN_P logic_expr CLOSE_P .

    CLOSE_P   reduce using rule 176 (logic_expr)
    AND_AND   reduce using rule 176 (logic_expr)
    OR_OR     reduce using rule 176 (logic_expr)
    $default  reduce using rule 235 (if_header)


state 350

  243 message: IDENTIFIER SEMI_COLUMN . argument_list

    error        shift, and go to state 392
    IDENTIFIER   shift, and go to state 393
    SEMI_COLUMN  shift, and go to state 394

    argument_list  go to state 395
    argument       go to state 396


state 351

  239 message_call: OPEN_ARR sender message CLOSE_ARR .

    $default  reduce using rule 239 (message_call)


state 352

  218 do_while_loop: DO statement while_loop_header SEMI_COMA .

    $default  reduce using rule 218 (do_while_loop)


state 353

  223 switch: SWITCH error switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 397


state 354

  224 switch: SWITCH OPEN_P switch_statement error . OPEN_S switch_body CLOSE_S

    OPEN_S  shift, and go to state 398


state 355

  222 switch: SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body CLOSE_S
  225       | SWITCH OPEN_P switch_statement CLOSE_P . OPEN_S switch_body error
  226       | SWITCH OPEN_P switch_statement CLOSE_P . error switch_body CLOSE_S

    error   shift, and go to state 399
    OPEN_S  shift, and go to state 400


state 356

  220 conditional_statement: if_header statement ELSE statement .

    $default  reduce using rule 220 (conditional_statement)


state 357

   44 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr error .

    $default  reduce using rule 44 (variable_declaration)


state 358

   43 variable_declaration: CONST type IDENTIFIER EQUAL simple_expr SEMI_COMA .

    $default  reduce using rule 43 (variable_declaration)


state 359

   58 variable_declarations: CONST type IDENTIFIER . SEMI_COMA
   60                      | CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 401
    SEMI_COMA    shift, and go to state 402


state 360

   51 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S SEMI_COMA .

    $default  reduce using rule 51 (structrule)


state 361

   23 ids_list: ids_list . error IDENTIFIER
   24         | ids_list . COMMA IDENTIFIER
   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list . SEMI_COMA

    error      shift, and go to state 120
    SEMI_COMA  shift, and go to state 403
    COMMA      shift, and go to state 121


state 362

   57 variable_declarations: variable_declarations CONST type . IDENTIFIER SEMI_COMA
   59                      | variable_declarations CONST type . IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA

    IDENTIFIER  shift, and go to state 404


state 363

   54 variable_declarations: variable_declarations type IDENTIFIER . SEMI_COMA
   56                      | variable_declarations type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 405
    SEMI_COMA    shift, and go to state 406


state 364

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 407
    method_call   go to state 168
    message_call  go to state 175


state 365

   53 variable_declarations: type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 53 (variable_declarations)


state 366

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER . SEMI_COMA

    SEMI_COMA  shift, and go to state 408


state 367

   49 Enum: ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 49 (Enum)


state 368

   62 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR SEMI_COMA .

    $default  reduce using rule 62 (ArrayOne)


state 369

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL . OPEN_S array_body CLOSE_S SEMI_COMA

    OPEN_S  shift, and go to state 409


state 370

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR . INT_VAL CLOSE_ARR

    INT_VAL  shift, and go to state 410


state 371

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 411

    array_body    go to state 412
    p_type        go to state 155
    expr          go to state 413
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 372

   74 array_body2: OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 411

    array_body    go to state 414
    p_type        go to state 155
    expr          go to state 413
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 373

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 415


state 374

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 . CLOSE_S SEMI_COMA
   76 array_body2: array_body2 . COMMA OPEN_S array_body CLOSE_S
   77            | array_body2 . COMMA expr

    CLOSE_S  shift, and go to state 416
    COMMA    shift, and go to state 417


state 375

   75 array_body2: expr .

    $default  reduce using rule 75 (array_body2)


state 376

   73 Multi: Multi OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 73 (Multi)


state 377

  105 parameter_list: parameter_list IDENTIFIER error parameter .

    $default  reduce using rule 105 (parameter_list)


state 378

  104 parameter_list: parameter_list IDENTIFIER SEMI_COLUMN parameter .

    $default  reduce using rule 104 (parameter_list)


state 379

  110 catch_statment: CATCH OPEN_P NSEXception . Exception_type CLOSE_P block_body catch_statment

    NUllPointerException   shift, and go to state 418
    OUtOfBoundryException  shift, and go to state 419
    CAstException          shift, and go to state 420

    Exception_type  go to state 421


state 380

  156 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 422
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 381

  152 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 423
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 382

  165 for_initializer: INT IDENTIFIER error expr .

    $default  reduce using rule 165 (for_initializer)


state 383

  163 for_initializer: INT IDENTIFIER EQUAL expr .

    $default  reduce using rule 163 (for_initializer)


state 384

  176 logic_expr: OPEN_P logic_expr CLOSE_P .

    $default  reduce using rule 176 (logic_expr)


state 385

  155 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 424


state 386

  162 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 162 (for_loop_header)


state 387

  161 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 425


state 388

  153 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  154                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . expr error
  160                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 426
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 427
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 389

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . expr CLOSE_P
  159                | FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 428
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 429
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 390

  149 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr CLOSE_P
  150                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA expr error
  158                | FOR OPEN_P for_initializer SEMI_COMA logic_expr . SEMI_COMA CLOSE_P
  177 logic_expr: logic_expr . AND_AND logic_expr
  178           | logic_expr . OR_OR logic_expr

    SEMI_COMA  shift, and go to state 430
    AND_AND    shift, and go to state 277
    OR_OR      shift, and go to state 278


state 391

  151 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 431
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 392

  247 argument: error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 432
    method_call   go to state 168
    message_call  go to state 175


state 393

  248 argument: IDENTIFIER . SEMI_COLUMN simple_expr
  249         | IDENTIFIER . simple_expr
  250         | IDENTIFIER . error simple_expr

    error        shift, and go to state 433
    IDENTIFIER   shift, and go to state 210
    SEMI_COLUMN  shift, and go to state 434
    OPEN_P       shift, and go to state 142
    STRING_VAL   shift, and go to state 143
    FLOAT_VAL    shift, and go to state 144
    CHAR_VAL     shift, and go to state 145
    INT_VAL      shift, and go to state 146
    OPEN_ARR     shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 435
    method_call   go to state 168
    message_call  go to state 175


state 394

  246 argument: SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 436
    method_call   go to state 168
    message_call  go to state 175


state 395

  243 message: IDENTIFIER SEMI_COLUMN argument_list .
  244 argument_list: argument_list . argument

    error        shift, and go to state 392
    IDENTIFIER   shift, and go to state 393
    SEMI_COLUMN  shift, and go to state 394

    CLOSE_ARR  reduce using rule 243 (message)

    argument  go to state 437


state 396

  245 argument_list: argument .

    $default  reduce using rule 245 (argument_list)


state 397

  223 switch: SWITCH error switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 438
    CASE     shift, and go to state 439

    switch_body  go to state 440


state 398

  224 switch: SWITCH OPEN_P switch_statement error OPEN_S . switch_body CLOSE_S

    DEFAULT  shift, and go to state 438
    CASE     shift, and go to state 439

    switch_body  go to state 441


state 399

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P error . switch_body CLOSE_S

    DEFAULT  shift, and go to state 438
    CASE     shift, and go to state 439

    switch_body  go to state 442


state 400

  222 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body CLOSE_S
  225       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S . switch_body error

    DEFAULT  shift, and go to state 438
    CASE     shift, and go to state 439

    switch_body  go to state 443


state 401

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 444
    method_call   go to state 168
    message_call  go to state 175


state 402

   58 variable_declarations: CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 58 (variable_declarations)


state 403

   52 structrule: STRUCT IDENTIFIER OPEN_S variable_declarations CLOSE_S ids_list SEMI_COMA .

    $default  reduce using rule 52 (structrule)


state 404

   57 variable_declarations: variable_declarations CONST type IDENTIFIER . SEMI_COMA
   59                      | variable_declarations CONST type IDENTIFIER . SEMI_COLUMN simple_expr SEMI_COMA

    SEMI_COLUMN  shift, and go to state 445
    SEMI_COMA    shift, and go to state 446


state 405

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 447
    method_call   go to state 168
    message_call  go to state 175


state 406

   54 variable_declarations: variable_declarations type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 54 (variable_declarations)


state 407

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 448
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 408

   50 Enum: TYPEDEF ENUM OPEN_S ids_list CLOSE_S IDENTIFIER SEMI_COMA .

    $default  reduce using rule 50 (Enum)


state 409

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . CLOSE_S SEMI_COMA
   63         | type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S . array_body CLOSE_S SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    CLOSE_S     shift, and go to state 449
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 411

    array_body    go to state 450
    p_type        go to state 155
    expr          go to state 413
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 410

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL . CLOSE_ARR

    CLOSE_ARR  shift, and go to state 451


state 411

   68 array_body: OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  239 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 218
    INT_VAL     shift, and go to state 452
    OPEN_ARR    shift, and go to state 150

    message_call  go to state 219
    sender        go to state 220


state 412

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 453
    COMMA    shift, and go to state 454


state 413

   66 array_body: expr .

    $default  reduce using rule 66 (array_body)


state 414

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   74 array_body2: OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 455
    COMMA    shift, and go to state 454


state 415

   69 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 69 (ArrayN)


state 416

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 456


state 417

   76 array_body2: array_body2 COMMA . OPEN_S array_body CLOSE_S
   77            | array_body2 COMMA . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_S      shift, and go to state 457
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 458
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 418

  112 Exception_type: NUllPointerException .

    $default  reduce using rule 112 (Exception_type)


state 419

  113 Exception_type: OUtOfBoundryException .

    $default  reduce using rule 113 (Exception_type)


state 420

  114 Exception_type: CAstException .

    $default  reduce using rule 114 (Exception_type)


state 421

  110 catch_statment: CATCH OPEN_P NSEXception Exception_type . CLOSE_P block_body catch_statment

    CLOSE_P  shift, and go to state 459


state 422

  156 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 460


state 423

  152 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 461
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 424

  155 for_loop_header: FOR SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 155 (for_loop_header)


state 425

  161 for_loop_header: FOR OPEN_P SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 161 (for_loop_header)


state 426

  160 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 160 (for_loop_header)


state 427

  153 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  154                | FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 462
    CLOSE_P  shift, and go to state 463


state 428

  159 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA CLOSE_P .

    $default  reduce using rule 159 (for_loop_header)


state 429

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 464


state 430

  149 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr CLOSE_P
  150                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . expr error
  158                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA . CLOSE_P

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    CLOSE_P     shift, and go to state 465
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 466
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 431

  151 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 467


state 432

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  247 argument: error simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 247 (argument)


state 433

   99 p_type: error . type CLOSE_P
  250 argument: IDENTIFIER error . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 468
    method_call   go to state 168
    message_call  go to state 175


state 434

  248 argument: IDENTIFIER SEMI_COLUMN . simple_expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 469
    method_call   go to state 168
    message_call  go to state 175


state 435

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  249 argument: IDENTIFIER simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 249 (argument)


state 436

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  246 argument: SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 246 (argument)


state 437

  244 argument_list: argument_list argument .

    $default  reduce using rule 244 (argument_list)


state 438

  229 switch_body: DEFAULT . SEMI_COLUMN statement BREAK SEMI_COMA
  230            | DEFAULT . SEMI_COLUMN statement error SEMI_COMA

    SEMI_COLUMN  shift, and go to state 470


state 439

  227 switch_body: CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  228            | CASE . OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    OPEN_P  shift, and go to state 471


state 440

  223 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 472


state 441

  224 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 473


state 442

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body . CLOSE_S

    CLOSE_S  shift, and go to state 474


state 443

  222 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . CLOSE_S
  225       | SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body . error

    error    shift, and go to state 475
    CLOSE_S  shift, and go to state 476


state 444

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 477
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 445

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN . simple_expr SEMI_COMA

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    long_id       go to state 201
    simple_expr   go to state 478
    method_call   go to state 168
    message_call  go to state 175


state 446

   57 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COMA .

    $default  reduce using rule 57 (variable_declarations)


state 447

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 479
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 448

   55 variable_declarations: type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 55 (variable_declarations)


state 449

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 480


state 450

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body . CLOSE_S SEMI_COMA
   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    CLOSE_S  shift, and go to state 481
    COMMA    shift, and go to state 454


state 451

   72 Multi: OPEN_ARR INT_VAL CLOSE_ARR OPEN_ARR INT_VAL CLOSE_ARR .

    $default  reduce using rule 72 (Multi)


state 452

   68 array_body: OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 482


state 453

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 483


state 454

   65 array_body: array_body COMMA . expr
   67           | array_body COMMA . OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 484

    p_type        go to state 155
    expr          go to state 485
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 455

   74 array_body2: OPEN_S array_body CLOSE_S .

    $default  reduce using rule 74 (array_body2)


state 456

   71 ArrayN: type IDENTIFIER Multi EQUAL OPEN_S array_body2 CLOSE_S SEMI_COMA .

    $default  reduce using rule 71 (ArrayN)


state 457

   76 array_body2: array_body2 COMMA OPEN_S . array_body CLOSE_S

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 411

    array_body    go to state 486
    p_type        go to state 155
    expr          go to state 413
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 458

   77 array_body2: array_body2 COMMA expr .

    $default  reduce using rule 77 (array_body2)


state 459

  110 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P . block_body catch_statment

    OPEN_S  shift, and go to state 99

    block_body  go to state 487


state 460

  156 for_loop_header: FOR error SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 156 (for_loop_header)


state 461

  152 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P

    CLOSE_P  shift, and go to state 488


state 462

  154 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 154 (for_loop_header)


state 463

  153 for_loop_header: FOR OPEN_P SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 153 (for_loop_header)


state 464

  157 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 157 (for_loop_header)


state 465

  158 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA CLOSE_P .

    $default  reduce using rule 158 (for_loop_header)


state 466

  149 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . CLOSE_P
  150                | FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr . error

    error    shift, and go to state 489
    CLOSE_P  shift, and go to state 490


state 467

  151 for_loop_header: FOR for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 151 (for_loop_header)


state 468

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  250 argument: IDENTIFIER error simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 250 (argument)


state 469

  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  248 argument: IDENTIFIER SEMI_COLUMN simple_expr .

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 248 (argument)


state 470

  229 switch_body: DEFAULT SEMI_COLUMN . statement BREAK SEMI_COMA
  230            | DEFAULT SEMI_COLUMN . statement error SEMI_COMA

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 491
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 471

  227 switch_body: CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  228            | CASE OPEN_P . case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    error       shift, and go to state 492
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 493
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 494
    OPEN_ARR    shift, and go to state 150

    p_type          go to state 155
    logic_expr2     go to state 495
    expr2           go to state 496
    long_id         go to state 201
    simple_expr     go to state 497
    method_call     go to state 168
    case_statement  go to state 498
    message_call    go to state 175


state 472

  223 switch: SWITCH error switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 223 (switch)


state 473

  224 switch: SWITCH OPEN_P switch_statement error OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 224 (switch)


state 474

  226 switch: SWITCH OPEN_P switch_statement CLOSE_P error switch_body CLOSE_S .

    $default  reduce using rule 226 (switch)


state 475

  225 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body error .

    $default  reduce using rule 225 (switch)


state 476

  222 switch: SWITCH OPEN_P switch_statement CLOSE_P OPEN_S switch_body CLOSE_S .

    $default  reduce using rule 222 (switch)


state 477

   60 variable_declarations: CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 60 (variable_declarations)


state 478

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr . SEMI_COMA
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    SEMI_COMA  shift, and go to state 499
    PLUS       shift, and go to state 233
    MINUS      shift, and go to state 234
    MULTI      shift, and go to state 235
    DIV        shift, and go to state 236


state 479

   56 variable_declarations: variable_declarations type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 56 (variable_declarations)


state 480

   61 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S CLOSE_S SEMI_COMA .

    $default  reduce using rule 61 (ArrayOne)


state 481

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S . SEMI_COMA

    SEMI_COMA  shift, and go to state 500


state 482

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 501


state 483

   64 ArrayOne: type IDENTIFIER OPEN_ARR CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 64 (ArrayOne)


state 484

   67 array_body: array_body COMMA OPEN_ARR . INT_VAL CLOSE_ARR EQUAL expr
  239 message_call: OPEN_ARR . sender message CLOSE_ARR

    IDENTIFIER  shift, and go to state 218
    INT_VAL     shift, and go to state 502
    OPEN_ARR    shift, and go to state 150

    message_call  go to state 219
    sender        go to state 220


state 485

   65 array_body: array_body COMMA expr .

    $default  reduce using rule 65 (array_body)


state 486

   65 array_body: array_body . COMMA expr
   67           | array_body . COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr
   76 array_body2: array_body2 COMMA OPEN_S array_body . CLOSE_S

    CLOSE_S  shift, and go to state 503
    COMMA    shift, and go to state 454


state 487

  110 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body . catch_statment

    CATCH    shift, and go to state 256
    FINALLY  shift, and go to state 257

    catch_statment  go to state 504


state 488

  152 for_loop_header: FOR error for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 152 (for_loop_header)


state 489

  150 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr error .

    $default  reduce using rule 150 (for_loop_header)


state 490

  149 for_loop_header: FOR OPEN_P for_initializer SEMI_COMA logic_expr SEMI_COMA expr CLOSE_P .

    $default  reduce using rule 149 (for_loop_header)


state 491

  229 switch_body: DEFAULT SEMI_COLUMN statement . BREAK SEMI_COMA
  230            | DEFAULT SEMI_COLUMN statement . error SEMI_COMA

    error  shift, and go to state 505
    BREAK  shift, and go to state 506


state 492

   99 p_type: error . type CLOSE_P
  190 logic_expr2: error . expr2
  192            | error . logic_expr2 CLOSE_P

    error       shift, and go to state 492
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 493
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 494
    OPEN_ARR    shift, and go to state 150

    type          go to state 123
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr2   go to state 507
    expr2         go to state 508
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 493

   98 p_type: OPEN_P . type CLOSE_P
  100       | OPEN_P . type error
  187 logic_expr2: OPEN_P . logic_expr2 CLOSE_P
  191            | OPEN_P . logic_expr2 error
  207 simple_expr: OPEN_P . simple_expr CLOSE_P

    error       shift, and go to state 492
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 493
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 494
    OPEN_ARR    shift, and go to state 150

    type          go to state 125
    simple_type   go to state 73
    complex_type  go to state 74
    p_type        go to state 155
    logic_expr2   go to state 509
    expr2         go to state 510
    long_id       go to state 201
    simple_expr   go to state 511
    method_call   go to state 168
    message_call  go to state 175


state 494

  186 logic_expr2: NOT_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 512
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 495

  188 logic_expr2: logic_expr2 . AND_AND logic_expr2
  189            | logic_expr2 . OR_OR logic_expr2
  233 case_statement: logic_expr2 .

    AND_AND  shift, and go to state 513
    OR_OR    shift, and go to state 514

    $default  reduce using rule 233 (case_statement)


state 496

  181 logic_expr2: expr2 . LESS_THAN expr2
  182            | expr2 . MORE_THAN expr2
  183            | expr2 . LESS_OR_EQUAL expr2
  184            | expr2 . MORE_OR_EQUAL expr2
  185            | expr2 . EQUAL_EQUAL expr2
  234 case_statement: expr2 .

    LESS_THAN      shift, and go to state 515
    MORE_THAN      shift, and go to state 516
    LESS_OR_EQUAL  shift, and go to state 517
    MORE_OR_EQUAL  shift, and go to state 518
    EQUAL_EQUAL    shift, and go to state 519

    $default  reduce using rule 234 (case_statement)


state 497

  193 expr2: simple_expr .
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr

    PLUS   shift, and go to state 233
    MINUS  shift, and go to state 234
    MULTI  shift, and go to state 235
    DIV    shift, and go to state 236

    $default  reduce using rule 193 (expr2)


state 498

  227 switch_body: CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  228            | CASE OPEN_P case_statement . CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body

    CLOSE_P  shift, and go to state 520


state 499

   59 variable_declarations: variable_declarations CONST type IDENTIFIER SEMI_COLUMN simple_expr SEMI_COMA .

    $default  reduce using rule 59 (variable_declarations)


state 500

   63 ArrayOne: type IDENTIFIER OPEN_ARR INT_VAL CLOSE_ARR EQUAL OPEN_S array_body CLOSE_S SEMI_COMA .

    $default  reduce using rule 63 (ArrayOne)


state 501

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 521
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 502

   67 array_body: array_body COMMA OPEN_ARR INT_VAL . CLOSE_ARR EQUAL expr

    CLOSE_ARR  shift, and go to state 522


state 503

   76 array_body2: array_body2 COMMA OPEN_S array_body CLOSE_S .

    $default  reduce using rule 76 (array_body2)


state 504

  110 catch_statment: CATCH OPEN_P NSEXception Exception_type CLOSE_P block_body catch_statment .

    $default  reduce using rule 110 (catch_statment)


state 505

  230 switch_body: DEFAULT SEMI_COLUMN statement error . SEMI_COMA

    SEMI_COMA  shift, and go to state 523


state 506

  229 switch_body: DEFAULT SEMI_COLUMN statement BREAK . SEMI_COMA

    SEMI_COMA  shift, and go to state 524


state 507

  188 logic_expr2: logic_expr2 . AND_AND logic_expr2
  189            | logic_expr2 . OR_OR logic_expr2
  192            | error logic_expr2 . CLOSE_P

    CLOSE_P  shift, and go to state 525
    AND_AND  shift, and go to state 513
    OR_OR    shift, and go to state 514


state 508

  181 logic_expr2: expr2 . LESS_THAN expr2
  182            | expr2 . MORE_THAN expr2
  183            | expr2 . LESS_OR_EQUAL expr2
  184            | expr2 . MORE_OR_EQUAL expr2
  185            | expr2 . EQUAL_EQUAL expr2
  190            | error expr2 .

    LESS_THAN      shift, and go to state 515
    MORE_THAN      shift, and go to state 516
    LESS_OR_EQUAL  shift, and go to state 517
    MORE_OR_EQUAL  shift, and go to state 518
    EQUAL_EQUAL    shift, and go to state 519

    $default  reduce using rule 190 (logic_expr2)


state 509

  187 logic_expr2: OPEN_P logic_expr2 . CLOSE_P
  188            | logic_expr2 . AND_AND logic_expr2
  189            | logic_expr2 . OR_OR logic_expr2
  191            | OPEN_P logic_expr2 . error

    error    shift, and go to state 526
    CLOSE_P  shift, and go to state 527
    AND_AND  shift, and go to state 513
    OR_OR    shift, and go to state 514


state 510

  181 logic_expr2: expr2 . LESS_THAN expr2
  182            | expr2 . MORE_THAN expr2
  183            | expr2 . LESS_OR_EQUAL expr2
  184            | expr2 . MORE_OR_EQUAL expr2
  185            | expr2 . EQUAL_EQUAL expr2

    LESS_THAN      shift, and go to state 515
    MORE_THAN      shift, and go to state 516
    LESS_OR_EQUAL  shift, and go to state 517
    MORE_OR_EQUAL  shift, and go to state 518
    EQUAL_EQUAL    shift, and go to state 519


state 511

  193 expr2: simple_expr .
  203 simple_expr: simple_expr . PLUS simple_expr
  204            | simple_expr . MINUS simple_expr
  205            | simple_expr . MULTI simple_expr
  206            | simple_expr . DIV simple_expr
  207            | OPEN_P simple_expr . CLOSE_P

    PLUS     shift, and go to state 233
    MINUS    shift, and go to state 234
    CLOSE_P  shift, and go to state 260
    MULTI    shift, and go to state 235
    DIV      shift, and go to state 236

    $default  reduce using rule 193 (expr2)


state 512

  186 logic_expr2: NOT_EQUAL expr2 .

    $default  reduce using rule 186 (logic_expr2)


state 513

  188 logic_expr2: logic_expr2 AND_AND . logic_expr2

    error       shift, and go to state 492
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 493
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 494
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr2   go to state 528
    expr2         go to state 510
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 514

  189 logic_expr2: logic_expr2 OR_OR . logic_expr2

    error       shift, and go to state 492
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 493
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    NOT_EQUAL   shift, and go to state 494
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    logic_expr2   go to state 529
    expr2         go to state 510
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 515

  181 logic_expr2: expr2 LESS_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 530
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 516

  182 logic_expr2: expr2 MORE_THAN . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 531
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 517

  183 logic_expr2: expr2 LESS_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 532
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 518

  184 logic_expr2: expr2 MORE_OR_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 533
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 519

  185 logic_expr2: expr2 EQUAL_EQUAL . expr2

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr2         go to state 534
    long_id       go to state 201
    simple_expr   go to state 497
    method_call   go to state 168
    message_call  go to state 175


state 520

  227 switch_body: CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement BREAK SEMI_COMA switch_body
  228            | CASE OPEN_P case_statement CLOSE_P . SEMI_COLUMN statement error SEMI_COMA switch_body

    SEMI_COLUMN  shift, and go to state 535


state 521

   68 array_body: OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 68 (array_body)


state 522

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR . EQUAL expr

    EQUAL  shift, and go to state 536


state 523

  230 switch_body: DEFAULT SEMI_COLUMN statement error SEMI_COMA .

    $default  reduce using rule 230 (switch_body)


state 524

  229 switch_body: DEFAULT SEMI_COLUMN statement BREAK SEMI_COMA .

    $default  reduce using rule 229 (switch_body)


state 525

  192 logic_expr2: error logic_expr2 CLOSE_P .

    $default  reduce using rule 192 (logic_expr2)


state 526

  191 logic_expr2: OPEN_P logic_expr2 error .

    $default  reduce using rule 191 (logic_expr2)


state 527

  187 logic_expr2: OPEN_P logic_expr2 CLOSE_P .

    $default  reduce using rule 187 (logic_expr2)


state 528

  188 logic_expr2: logic_expr2 . AND_AND logic_expr2
  188            | logic_expr2 AND_AND logic_expr2 .
  189            | logic_expr2 . OR_OR logic_expr2

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 188 (logic_expr2)


state 529

  188 logic_expr2: logic_expr2 . AND_AND logic_expr2
  189            | logic_expr2 . OR_OR logic_expr2
  189            | logic_expr2 OR_OR logic_expr2 .

    AND_AND  error (nonassociative)
    OR_OR    error (nonassociative)

    $default  reduce using rule 189 (logic_expr2)


state 530

  181 logic_expr2: expr2 LESS_THAN expr2 .

    $default  reduce using rule 181 (logic_expr2)


state 531

  182 logic_expr2: expr2 MORE_THAN expr2 .

    $default  reduce using rule 182 (logic_expr2)


state 532

  183 logic_expr2: expr2 LESS_OR_EQUAL expr2 .

    $default  reduce using rule 183 (logic_expr2)


state 533

  184 logic_expr2: expr2 MORE_OR_EQUAL expr2 .

    $default  reduce using rule 184 (logic_expr2)


state 534

  185 logic_expr2: expr2 EQUAL_EQUAL expr2 .

    $default  reduce using rule 185 (logic_expr2)


state 535

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement BREAK SEMI_COMA switch_body
  228            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN . statement error SEMI_COMA switch_body

    error       shift, and go to state 77
    TRY         shift, and go to state 139
    IDENTIFIER  shift, and go to state 140
    NSSTRING    shift, and go to state 51
    FLOAT       shift, and go to state 52
    CHAR        shift, and go to state 53
    INT         shift, and go to state 54
    CONST       shift, and go to state 58
    VOID        shift, and go to state 59
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    FOR         shift, and go to state 147
    WHILE       shift, and go to state 148
    IF          shift, and go to state 149
    OPEN_ARR    shift, and go to state 150
    RETURN      shift, and go to state 151
    DO          shift, and go to state 152
    SWITCH      shift, and go to state 153
    STRUCT      shift, and go to state 60
    TYPEDEF     shift, and go to state 61
    ENUM        shift, and go to state 62

    OPEN_S  reduce using rule 139 (@1)

    variable_declaration   go to state 154
    Enum                   go to state 68
    structrule             go to state 69
    ArrayOne               go to state 70
    ArrayN                 go to state 71
    type                   go to state 72
    simple_type            go to state 73
    complex_type           go to state 74
    p_type                 go to state 155
    try_catch              go to state 156
    statement              go to state 537
    @1                     go to state 159
    return_statement       go to state 160
    loop_statement         go to state 161
    for_loop               go to state 162
    for_loop_header        go to state 163
    expr                   go to state 164
    assign_expr            go to state 165
    long_id                go to state 166
    simple_expr            go to state 167
    method_call            go to state 168
    while_loop             go to state 169
    while_loop_header      go to state 170
    do_while_loop          go to state 171
    conditional_statement  go to state 172
    switch                 go to state 173
    if_header              go to state 174
    message_call           go to state 175


state 536

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL . expr

    error       shift, and go to state 77
    IDENTIFIER  shift, and go to state 210
    OPEN_P      shift, and go to state 142
    STRING_VAL  shift, and go to state 143
    FLOAT_VAL   shift, and go to state 144
    CHAR_VAL    shift, and go to state 145
    INT_VAL     shift, and go to state 146
    OPEN_ARR    shift, and go to state 150

    p_type        go to state 155
    expr          go to state 538
    assign_expr   go to state 165
    long_id       go to state 166
    simple_expr   go to state 167
    method_call   go to state 168
    message_call  go to state 175


state 537

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . BREAK SEMI_COMA switch_body
  228            | CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement . error SEMI_COMA switch_body

    error  shift, and go to state 539
    BREAK  shift, and go to state 540


state 538

   67 array_body: array_body COMMA OPEN_ARR INT_VAL CLOSE_ARR EQUAL expr .

    $default  reduce using rule 67 (array_body)


state 539

  228 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 541


state 540

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK . SEMI_COMA switch_body

    SEMI_COMA  shift, and go to state 542


state 541

  228 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 438
    CASE     shift, and go to state 439

    switch_body  go to state 543


state 542

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA . switch_body

    DEFAULT  shift, and go to state 438
    CASE     shift, and go to state 439

    switch_body  go to state 544


state 543

  228 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement error SEMI_COMA switch_body .

    $default  reduce using rule 228 (switch_body)


state 544

  227 switch_body: CASE OPEN_P case_statement CLOSE_P SEMI_COLUMN statement BREAK SEMI_COMA switch_body .

    $default  reduce using rule 227 (switch_body)
